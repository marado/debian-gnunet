# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
@TALER_ONLY_FALSE@libexec_PROGRAMS = gnunet-service-resolver$(EXEEXT) \
@TALER_ONLY_FALSE@	gnunet-timeout$(EXEEXT)
@TALER_ONLY_FALSE@bin_PROGRAMS = gnunet-resolver$(EXEEXT) \
@TALER_ONLY_FALSE@	gnunet-config$(EXEEXT) $(am__EXEEXT_1) \
@TALER_ONLY_FALSE@	$(am__EXEEXT_2) gnunet-uri$(EXEEXT) \
@TALER_ONLY_FALSE@	$(am__EXEEXT_3)
@HAVE_ZBAR_TRUE@@TALER_ONLY_FALSE@am__append_1 = gnunet-qr
@TALER_ONLY_FALSE@noinst_PROGRAMS = gnunet-config-diff$(EXEEXT) \
@TALER_ONLY_FALSE@	test_common_logging_dummy$(EXEEXT)
@HAVE_GETADDRINFO_A_TRUE@am__append_2 = -lanl
check_PROGRAMS = test_bio$(EXEEXT) test_client.nc$(EXEEXT) \
	$(am__EXEEXT_4) test_common_allocation$(EXEEXT) \
	test_common_endian$(EXEEXT) test_common_logging$(EXEEXT) \
	test_configuration$(EXEEXT) \
	test_container_bloomfilter$(EXEEXT) \
	test_container_dll$(EXEEXT) test_container_meta_data$(EXEEXT) \
	test_container_multihashmap$(EXEEXT) \
	test_container_multihashmap32$(EXEEXT) \
	test_container_multipeermap$(EXEEXT) \
	test_container_heap$(EXEEXT) test_crypto_symmetric$(EXEEXT) \
	test_crypto_crc$(EXEEXT) test_crypto_ecdsa$(EXEEXT) \
	test_crypto_eddsa$(EXEEXT) test_crypto_ecdhe$(EXEEXT) \
	test_crypto_ecdh_eddsa$(EXEEXT) test_crypto_ecc_dlog$(EXEEXT) \
	test_crypto_hash$(EXEEXT) test_crypto_hash_context$(EXEEXT) \
	test_crypto_hkdf$(EXEEXT) test_crypto_kdf$(EXEEXT) \
	test_crypto_paillier$(EXEEXT) test_crypto_random$(EXEEXT) \
	test_crypto_rsa$(EXEEXT) test_disk$(EXEEXT) \
	test_getopt$(EXEEXT) test_hexcoder$(EXEEXT) test_mq$(EXEEXT) \
	test_os_network$(EXEEXT) test_peer$(EXEEXT) \
	test_plugin$(EXEEXT) test_program$(EXEEXT) test_regex$(EXEEXT) \
	test_resolver_api.nc$(EXEEXT) test_scheduler$(EXEEXT) \
	test_scheduler_delay$(EXEEXT) test_service$(EXEEXT) \
	test_strings$(EXEEXT) test_strings_to_data$(EXEEXT) \
	test_speedup$(EXEEXT) test_time$(EXEEXT) test_tun$(EXEEXT) \
	$(am__EXEEXT_5) test_os_start_process$(EXEEXT) \
	test_common_logging_runtime_loglevels$(EXEEXT)
subdir = src/util
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/absolute-header.m4 \
	$(top_srcdir)/m4/align.m4 $(top_srcdir)/m4/as-auto-alt.m4 \
	$(top_srcdir)/m4/ax_compare_version.m4 \
	$(top_srcdir)/m4/ax_lib_postgresql.m4 \
	$(top_srcdir)/m4/check-libheader.m4 \
	$(top_srcdir)/m4/gettext.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/libcurl.m4 $(top_srcdir)/m4/libgcrypt.m4 \
	$(top_srcdir)/m4/libgnurl.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/libunistring.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(dist_pkgcfg_DATA) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/gnunet_config.h
CONFIG_CLEAN_FILES = resolver.conf
CONFIG_CLEAN_VPATH_FILES =
@HAVE_TESTING_TRUE@am__EXEEXT_1 = gnunet-ecc$(EXEEXT)
@HAVE_TESTING_TRUE@am__EXEEXT_2 = gnunet-scrypt$(EXEEXT)
@HAVE_ZBAR_TRUE@@TALER_ONLY_FALSE@am__EXEEXT_3 = gnunet-qr$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libexecdir)" \
	"$(DESTDIR)$(libdir)" "$(DESTDIR)$(plugindir)" \
	"$(DESTDIR)$(pkgcfgdir)" "$(DESTDIR)$(pkgcfgdir)"
am__EXEEXT_4 = test_client_unix.nc$(EXEEXT)
@HAVE_BENCHMARKS_TRUE@am__EXEEXT_5 = perf_crypto_hash$(EXEEXT) \
@HAVE_BENCHMARKS_TRUE@	perf_crypto_ecc_dlog$(EXEEXT) \
@HAVE_BENCHMARKS_TRUE@	perf_crypto_rsa$(EXEEXT) \
@HAVE_BENCHMARKS_TRUE@	perf_crypto_paillier$(EXEEXT) \
@HAVE_BENCHMARKS_TRUE@	perf_crypto_symmetric$(EXEEXT) \
@HAVE_BENCHMARKS_TRUE@	perf_crypto_asymmetric$(EXEEXT) \
@HAVE_BENCHMARKS_TRUE@	perf_malloc$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(libexec_PROGRAMS) $(noinst_PROGRAMS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
LTLIBRARIES = $(lib_LTLIBRARIES) $(plugin_LTLIBRARIES)
libgnunet_plugin_test_la_LIBADD =
am_libgnunet_plugin_test_la_OBJECTS = test_plugin_plug.lo
libgnunet_plugin_test_la_OBJECTS =  \
	$(am_libgnunet_plugin_test_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libgnunet_plugin_test_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libgnunet_plugin_test_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am__DEPENDENCIES_1 =
libgnunetutil_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__libgnunetutil_la_SOURCES_DIST = bandwidth.c benchmark.c \
	benchmark.h bio.c client.c common_allocation.c common_endian.c \
	common_logging.c configuration.c configuration_loader.c \
	container_bloomfilter.c container_heap.c container_meta_data.c \
	container_multihashmap.c container_multishortmap.c \
	container_multiuuidmap.c container_multipeermap.c \
	container_multihashmap32.c crypto_symmetric.c crypto_crc.c \
	crypto_ecc.c crypto_ecc_dlog.c crypto_ecc_setup.c \
	crypto_hash.c crypto_hash_file.c crypto_hkdf.c crypto_kdf.c \
	crypto_mpi.c crypto_paillier.c crypto_pow.c crypto_random.c \
	crypto_rsa.c disk.c disk.h dnsparser.c dnsstub.c getopt.c \
	getopt_helpers.c helper.c load.c mst.c mq.c nc.c network.c \
	op.c os_installation.c os_network.c os_priority.c peer.c \
	plugin.c program.c regex.c resolver_api.c resolver.h \
	scheduler.c service.c signal.c strings.c time.c tun.c \
	tweetnacl-gnunet.c tweetnacl-gnunet.h speedup.c speedup.h \
	proc_compat.c
@ENABLE_BENCHMARK_TRUE@am__objects_1 = benchmark.lo
am_libgnunetutil_la_OBJECTS = bandwidth.lo $(am__objects_1) bio.lo \
	client.lo common_allocation.lo common_endian.lo \
	common_logging.lo configuration.lo configuration_loader.lo \
	container_bloomfilter.lo container_heap.lo \
	container_meta_data.lo container_multihashmap.lo \
	container_multishortmap.lo container_multiuuidmap.lo \
	container_multipeermap.lo container_multihashmap32.lo \
	crypto_symmetric.lo crypto_crc.lo crypto_ecc.lo \
	crypto_ecc_dlog.lo crypto_ecc_setup.lo crypto_hash.lo \
	crypto_hash_file.lo crypto_hkdf.lo crypto_kdf.lo crypto_mpi.lo \
	crypto_paillier.lo crypto_pow.lo crypto_random.lo \
	crypto_rsa.lo disk.lo dnsparser.lo dnsstub.lo getopt.lo \
	getopt_helpers.lo helper.lo load.lo mst.lo mq.lo nc.lo \
	network.lo op.lo os_installation.lo os_network.lo \
	os_priority.lo peer.lo plugin.lo program.lo regex.lo \
	resolver_api.lo scheduler.lo service.lo signal.lo strings.lo \
	time.lo tun.lo tweetnacl-gnunet.lo speedup.lo proc_compat.lo
libgnunetutil_la_OBJECTS = $(am_libgnunetutil_la_OBJECTS)
libgnunetutil_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libgnunetutil_la_LDFLAGS) $(LDFLAGS) \
	-o $@
@TALER_ONLY_FALSE@am_libgnunetutil_la_rpath = -rpath $(libdir)
libgnunetutil_taler_wallet_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libgnunetutil_taler_wallet_la_OBJECTS = common_allocation.lo \
	common_endian.lo common_logging.lo container_heap.lo \
	container_multihashmap.lo container_multihashmap32.lo \
	crypto_symmetric.lo crypto_crc.lo crypto_ecc.lo crypto_hash.lo \
	crypto_hkdf.lo crypto_kdf.lo crypto_mpi.lo crypto_random.lo \
	crypto_rsa.lo strings.lo time.lo
libgnunetutil_taler_wallet_la_OBJECTS =  \
	$(am_libgnunetutil_taler_wallet_la_OBJECTS)
libgnunetutil_taler_wallet_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) \
	$(libgnunetutil_taler_wallet_la_LDFLAGS) $(LDFLAGS) -o $@
@TALER_ONLY_TRUE@am_libgnunetutil_taler_wallet_la_rpath = -rpath \
@TALER_ONLY_TRUE@	$(libdir)
am_gnunet_config_OBJECTS = gnunet-config.$(OBJEXT)
gnunet_config_OBJECTS = $(am_gnunet_config_OBJECTS)
gnunet_config_DEPENDENCIES = libgnunetutil.la $(am__DEPENDENCIES_1)
am_gnunet_config_diff_OBJECTS = gnunet-config-diff.$(OBJEXT)
gnunet_config_diff_OBJECTS = $(am_gnunet_config_diff_OBJECTS)
gnunet_config_diff_DEPENDENCIES = libgnunetutil.la
am_gnunet_ecc_OBJECTS = gnunet-ecc.$(OBJEXT)
gnunet_ecc_OBJECTS = $(am_gnunet_ecc_OBJECTS)
gnunet_ecc_DEPENDENCIES = libgnunetutil.la $(am__DEPENDENCIES_1)
am_gnunet_qr_OBJECTS = gnunet-qr.$(OBJEXT)
gnunet_qr_OBJECTS = $(am_gnunet_qr_OBJECTS)
gnunet_qr_DEPENDENCIES = libgnunetutil.la $(am__DEPENDENCIES_1)
gnunet_qr_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(gnunet_qr_LDFLAGS) $(LDFLAGS) -o $@
am_gnunet_resolver_OBJECTS = gnunet-resolver.$(OBJEXT)
gnunet_resolver_OBJECTS = $(am_gnunet_resolver_OBJECTS)
gnunet_resolver_DEPENDENCIES = libgnunetutil.la $(am__DEPENDENCIES_1)
am_gnunet_scrypt_OBJECTS = gnunet-scrypt.$(OBJEXT)
gnunet_scrypt_OBJECTS = $(am_gnunet_scrypt_OBJECTS)
gnunet_scrypt_DEPENDENCIES = libgnunetutil.la $(am__DEPENDENCIES_1)
am_gnunet_service_resolver_OBJECTS =  \
	gnunet-service-resolver.$(OBJEXT)
gnunet_service_resolver_OBJECTS =  \
	$(am_gnunet_service_resolver_OBJECTS)
gnunet_service_resolver_DEPENDENCIES = libgnunetutil.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_gnunet_timeout_OBJECTS = gnunet-timeout.$(OBJEXT)
gnunet_timeout_OBJECTS = $(am_gnunet_timeout_OBJECTS)
gnunet_timeout_LDADD = $(LDADD)
am_gnunet_uri_OBJECTS = gnunet-uri.$(OBJEXT)
gnunet_uri_OBJECTS = $(am_gnunet_uri_OBJECTS)
gnunet_uri_DEPENDENCIES = libgnunetutil.la $(am__DEPENDENCIES_1)
am_perf_crypto_asymmetric_OBJECTS = perf_crypto_asymmetric.$(OBJEXT)
perf_crypto_asymmetric_OBJECTS = $(am_perf_crypto_asymmetric_OBJECTS)
perf_crypto_asymmetric_DEPENDENCIES = libgnunetutil.la
am_perf_crypto_ecc_dlog_OBJECTS = perf_crypto_ecc_dlog.$(OBJEXT)
perf_crypto_ecc_dlog_OBJECTS = $(am_perf_crypto_ecc_dlog_OBJECTS)
perf_crypto_ecc_dlog_DEPENDENCIES = libgnunetutil.la
am_perf_crypto_hash_OBJECTS = perf_crypto_hash.$(OBJEXT)
perf_crypto_hash_OBJECTS = $(am_perf_crypto_hash_OBJECTS)
perf_crypto_hash_DEPENDENCIES = libgnunetutil.la
am_perf_crypto_paillier_OBJECTS = perf_crypto_paillier.$(OBJEXT)
perf_crypto_paillier_OBJECTS = $(am_perf_crypto_paillier_OBJECTS)
perf_crypto_paillier_DEPENDENCIES = libgnunetutil.la
am_perf_crypto_rsa_OBJECTS = perf_crypto_rsa.$(OBJEXT)
perf_crypto_rsa_OBJECTS = $(am_perf_crypto_rsa_OBJECTS)
perf_crypto_rsa_DEPENDENCIES = libgnunetutil.la
am_perf_crypto_symmetric_OBJECTS = perf_crypto_symmetric.$(OBJEXT)
perf_crypto_symmetric_OBJECTS = $(am_perf_crypto_symmetric_OBJECTS)
perf_crypto_symmetric_DEPENDENCIES = libgnunetutil.la
am_perf_malloc_OBJECTS = perf_malloc.$(OBJEXT)
perf_malloc_OBJECTS = $(am_perf_malloc_OBJECTS)
perf_malloc_DEPENDENCIES = libgnunetutil.la
am_test_bio_OBJECTS = test_bio.$(OBJEXT)
test_bio_OBJECTS = $(am_test_bio_OBJECTS)
test_bio_DEPENDENCIES = libgnunetutil.la
am_test_client_nc_OBJECTS = test_client.$(OBJEXT)
test_client_nc_OBJECTS = $(am_test_client_nc_OBJECTS)
test_client_nc_DEPENDENCIES = libgnunetutil.la
am_test_client_unix_nc_OBJECTS = test_client.$(OBJEXT)
test_client_unix_nc_OBJECTS = $(am_test_client_unix_nc_OBJECTS)
test_client_unix_nc_DEPENDENCIES = libgnunetutil.la
am_test_common_allocation_OBJECTS = test_common_allocation.$(OBJEXT)
test_common_allocation_OBJECTS = $(am_test_common_allocation_OBJECTS)
test_common_allocation_DEPENDENCIES = libgnunetutil.la
am_test_common_endian_OBJECTS = test_common_endian.$(OBJEXT)
test_common_endian_OBJECTS = $(am_test_common_endian_OBJECTS)
test_common_endian_DEPENDENCIES = libgnunetutil.la
am_test_common_logging_OBJECTS = test_common_logging.$(OBJEXT)
test_common_logging_OBJECTS = $(am_test_common_logging_OBJECTS)
test_common_logging_DEPENDENCIES = libgnunetutil.la
am_test_common_logging_dummy_OBJECTS =  \
	test_common_logging_dummy.$(OBJEXT)
test_common_logging_dummy_OBJECTS =  \
	$(am_test_common_logging_dummy_OBJECTS)
test_common_logging_dummy_DEPENDENCIES = libgnunetutil.la
am_test_common_logging_runtime_loglevels_OBJECTS =  \
	test_common_logging_runtime_loglevels.$(OBJEXT)
test_common_logging_runtime_loglevels_OBJECTS =  \
	$(am_test_common_logging_runtime_loglevels_OBJECTS)
test_common_logging_runtime_loglevels_DEPENDENCIES = libgnunetutil.la
am_test_configuration_OBJECTS = test_configuration.$(OBJEXT)
test_configuration_OBJECTS = $(am_test_configuration_OBJECTS)
test_configuration_DEPENDENCIES = libgnunetutil.la
am_test_container_bloomfilter_OBJECTS =  \
	test_container_bloomfilter.$(OBJEXT)
test_container_bloomfilter_OBJECTS =  \
	$(am_test_container_bloomfilter_OBJECTS)
test_container_bloomfilter_DEPENDENCIES = libgnunetutil.la
am_test_container_dll_OBJECTS = test_container_dll.$(OBJEXT)
test_container_dll_OBJECTS = $(am_test_container_dll_OBJECTS)
test_container_dll_DEPENDENCIES = libgnunetutil.la
am_test_container_heap_OBJECTS = test_container_heap.$(OBJEXT)
test_container_heap_OBJECTS = $(am_test_container_heap_OBJECTS)
test_container_heap_DEPENDENCIES = libgnunetutil.la
am_test_container_meta_data_OBJECTS =  \
	test_container_meta_data.$(OBJEXT)
test_container_meta_data_OBJECTS =  \
	$(am_test_container_meta_data_OBJECTS)
test_container_meta_data_DEPENDENCIES = libgnunetutil.la
am_test_container_multihashmap_OBJECTS =  \
	test_container_multihashmap.$(OBJEXT)
test_container_multihashmap_OBJECTS =  \
	$(am_test_container_multihashmap_OBJECTS)
test_container_multihashmap_DEPENDENCIES = libgnunetutil.la
am_test_container_multihashmap32_OBJECTS =  \
	test_container_multihashmap32.$(OBJEXT)
test_container_multihashmap32_OBJECTS =  \
	$(am_test_container_multihashmap32_OBJECTS)
test_container_multihashmap32_DEPENDENCIES = libgnunetutil.la
am_test_container_multipeermap_OBJECTS =  \
	test_container_multipeermap.$(OBJEXT)
test_container_multipeermap_OBJECTS =  \
	$(am_test_container_multipeermap_OBJECTS)
test_container_multipeermap_DEPENDENCIES = libgnunetutil.la
am_test_crypto_crc_OBJECTS = test_crypto_crc.$(OBJEXT)
test_crypto_crc_OBJECTS = $(am_test_crypto_crc_OBJECTS)
test_crypto_crc_DEPENDENCIES = libgnunetutil.la
am_test_crypto_ecc_dlog_OBJECTS = test_crypto_ecc_dlog.$(OBJEXT)
test_crypto_ecc_dlog_OBJECTS = $(am_test_crypto_ecc_dlog_OBJECTS)
test_crypto_ecc_dlog_DEPENDENCIES = libgnunetutil.la \
	$(am__DEPENDENCIES_1)
am_test_crypto_ecdh_eddsa_OBJECTS = test_crypto_ecdh_eddsa.$(OBJEXT)
test_crypto_ecdh_eddsa_OBJECTS = $(am_test_crypto_ecdh_eddsa_OBJECTS)
test_crypto_ecdh_eddsa_DEPENDENCIES = libgnunetutil.la \
	$(am__DEPENDENCIES_1)
am_test_crypto_ecdhe_OBJECTS = test_crypto_ecdhe.$(OBJEXT)
test_crypto_ecdhe_OBJECTS = $(am_test_crypto_ecdhe_OBJECTS)
test_crypto_ecdhe_DEPENDENCIES = libgnunetutil.la \
	$(am__DEPENDENCIES_1)
am_test_crypto_ecdsa_OBJECTS = test_crypto_ecdsa.$(OBJEXT)
test_crypto_ecdsa_OBJECTS = $(am_test_crypto_ecdsa_OBJECTS)
test_crypto_ecdsa_DEPENDENCIES = libgnunetutil.la \
	$(am__DEPENDENCIES_1)
am_test_crypto_eddsa_OBJECTS = test_crypto_eddsa.$(OBJEXT)
test_crypto_eddsa_OBJECTS = $(am_test_crypto_eddsa_OBJECTS)
test_crypto_eddsa_DEPENDENCIES = libgnunetutil.la \
	$(am__DEPENDENCIES_1)
am_test_crypto_hash_OBJECTS = test_crypto_hash.$(OBJEXT)
test_crypto_hash_OBJECTS = $(am_test_crypto_hash_OBJECTS)
test_crypto_hash_DEPENDENCIES = libgnunetutil.la
am_test_crypto_hash_context_OBJECTS =  \
	test_crypto_hash_context.$(OBJEXT)
test_crypto_hash_context_OBJECTS =  \
	$(am_test_crypto_hash_context_OBJECTS)
test_crypto_hash_context_DEPENDENCIES = libgnunetutil.la
am_test_crypto_hkdf_OBJECTS = test_crypto_hkdf.$(OBJEXT)
test_crypto_hkdf_OBJECTS = $(am_test_crypto_hkdf_OBJECTS)
test_crypto_hkdf_DEPENDENCIES = libgnunetutil.la
am_test_crypto_kdf_OBJECTS = test_crypto_kdf.$(OBJEXT)
test_crypto_kdf_OBJECTS = $(am_test_crypto_kdf_OBJECTS)
test_crypto_kdf_DEPENDENCIES = libgnunetutil.la
am_test_crypto_paillier_OBJECTS = test_crypto_paillier.$(OBJEXT)
test_crypto_paillier_OBJECTS = $(am_test_crypto_paillier_OBJECTS)
test_crypto_paillier_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	libgnunetutil.la
am_test_crypto_random_OBJECTS = test_crypto_random.$(OBJEXT)
test_crypto_random_OBJECTS = $(am_test_crypto_random_OBJECTS)
test_crypto_random_DEPENDENCIES = libgnunetutil.la
am_test_crypto_rsa_OBJECTS = test_crypto_rsa.$(OBJEXT)
test_crypto_rsa_OBJECTS = $(am_test_crypto_rsa_OBJECTS)
test_crypto_rsa_DEPENDENCIES = libgnunetutil.la
am_test_crypto_symmetric_OBJECTS = test_crypto_symmetric.$(OBJEXT)
test_crypto_symmetric_OBJECTS = $(am_test_crypto_symmetric_OBJECTS)
test_crypto_symmetric_DEPENDENCIES = libgnunetutil.la
am_test_disk_OBJECTS = test_disk.$(OBJEXT)
test_disk_OBJECTS = $(am_test_disk_OBJECTS)
test_disk_DEPENDENCIES = libgnunetutil.la
am_test_getopt_OBJECTS = test_getopt.$(OBJEXT)
test_getopt_OBJECTS = $(am_test_getopt_OBJECTS)
test_getopt_DEPENDENCIES = libgnunetutil.la
am_test_hexcoder_OBJECTS = test_hexcoder.$(OBJEXT)
test_hexcoder_OBJECTS = $(am_test_hexcoder_OBJECTS)
test_hexcoder_DEPENDENCIES = libgnunetutil.la
am_test_mq_OBJECTS = test_mq.$(OBJEXT)
test_mq_OBJECTS = $(am_test_mq_OBJECTS)
test_mq_DEPENDENCIES = libgnunetutil.la
am_test_os_network_OBJECTS = test_os_network.$(OBJEXT)
test_os_network_OBJECTS = $(am_test_os_network_OBJECTS)
test_os_network_DEPENDENCIES = libgnunetutil.la
am_test_os_start_process_OBJECTS = test_os_start_process.$(OBJEXT)
test_os_start_process_OBJECTS = $(am_test_os_start_process_OBJECTS)
am_test_peer_OBJECTS = test_peer.$(OBJEXT)
test_peer_OBJECTS = $(am_test_peer_OBJECTS)
test_peer_DEPENDENCIES = libgnunetutil.la
am_test_plugin_OBJECTS = test_plugin.$(OBJEXT)
test_plugin_OBJECTS = $(am_test_plugin_OBJECTS)
test_plugin_DEPENDENCIES = libgnunetutil.la
am_test_program_OBJECTS = test_program.$(OBJEXT)
test_program_OBJECTS = $(am_test_program_OBJECTS)
test_program_DEPENDENCIES = libgnunetutil.la
am_test_regex_OBJECTS = test_regex.$(OBJEXT)
test_regex_OBJECTS = $(am_test_regex_OBJECTS)
test_regex_DEPENDENCIES = libgnunetutil.la
am_test_resolver_api_nc_OBJECTS = test_resolver_api.$(OBJEXT)
test_resolver_api_nc_OBJECTS = $(am_test_resolver_api_nc_OBJECTS)
test_resolver_api_nc_DEPENDENCIES = libgnunetutil.la
am_test_scheduler_OBJECTS = test_scheduler.$(OBJEXT)
test_scheduler_OBJECTS = $(am_test_scheduler_OBJECTS)
test_scheduler_DEPENDENCIES = libgnunetutil.la
am_test_scheduler_delay_OBJECTS = test_scheduler_delay.$(OBJEXT)
test_scheduler_delay_OBJECTS = $(am_test_scheduler_delay_OBJECTS)
test_scheduler_delay_DEPENDENCIES = libgnunetutil.la
am_test_service_OBJECTS = test_service.$(OBJEXT)
test_service_OBJECTS = $(am_test_service_OBJECTS)
test_service_DEPENDENCIES = libgnunetutil.la
am_test_speedup_OBJECTS = test_speedup.$(OBJEXT)
test_speedup_OBJECTS = $(am_test_speedup_OBJECTS)
test_speedup_DEPENDENCIES = libgnunetutil.la
am_test_strings_OBJECTS = test_strings.$(OBJEXT)
test_strings_OBJECTS = $(am_test_strings_OBJECTS)
test_strings_DEPENDENCIES = libgnunetutil.la
am_test_strings_to_data_OBJECTS = test_strings_to_data.$(OBJEXT)
test_strings_to_data_OBJECTS = $(am_test_strings_to_data_OBJECTS)
test_strings_to_data_DEPENDENCIES = libgnunetutil.la
am_test_time_OBJECTS = test_time.$(OBJEXT)
test_time_OBJECTS = $(am_test_time_OBJECTS)
test_time_DEPENDENCIES = libgnunetutil.la
am_test_tun_OBJECTS = test_tun.$(OBJEXT)
test_tun_OBJECTS = $(am_test_tun_OBJECTS)
test_tun_DEPENDENCIES = libgnunetutil.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/bandwidth.Plo \
	./$(DEPDIR)/benchmark.Plo ./$(DEPDIR)/bio.Plo \
	./$(DEPDIR)/client.Plo ./$(DEPDIR)/common_allocation.Plo \
	./$(DEPDIR)/common_endian.Plo ./$(DEPDIR)/common_logging.Plo \
	./$(DEPDIR)/configuration.Plo \
	./$(DEPDIR)/configuration_loader.Plo \
	./$(DEPDIR)/container_bloomfilter.Plo \
	./$(DEPDIR)/container_heap.Plo \
	./$(DEPDIR)/container_meta_data.Plo \
	./$(DEPDIR)/container_multihashmap.Plo \
	./$(DEPDIR)/container_multihashmap32.Plo \
	./$(DEPDIR)/container_multipeermap.Plo \
	./$(DEPDIR)/container_multishortmap.Plo \
	./$(DEPDIR)/container_multiuuidmap.Plo \
	./$(DEPDIR)/crypto_crc.Plo ./$(DEPDIR)/crypto_ecc.Plo \
	./$(DEPDIR)/crypto_ecc_dlog.Plo \
	./$(DEPDIR)/crypto_ecc_setup.Plo ./$(DEPDIR)/crypto_hash.Plo \
	./$(DEPDIR)/crypto_hash_file.Plo ./$(DEPDIR)/crypto_hkdf.Plo \
	./$(DEPDIR)/crypto_kdf.Plo ./$(DEPDIR)/crypto_mpi.Plo \
	./$(DEPDIR)/crypto_paillier.Plo ./$(DEPDIR)/crypto_pow.Plo \
	./$(DEPDIR)/crypto_random.Plo ./$(DEPDIR)/crypto_rsa.Plo \
	./$(DEPDIR)/crypto_symmetric.Plo ./$(DEPDIR)/disk.Plo \
	./$(DEPDIR)/dnsparser.Plo ./$(DEPDIR)/dnsstub.Plo \
	./$(DEPDIR)/getopt.Plo ./$(DEPDIR)/getopt_helpers.Plo \
	./$(DEPDIR)/gnunet-config-diff.Po ./$(DEPDIR)/gnunet-config.Po \
	./$(DEPDIR)/gnunet-ecc.Po ./$(DEPDIR)/gnunet-qr.Po \
	./$(DEPDIR)/gnunet-resolver.Po ./$(DEPDIR)/gnunet-scrypt.Po \
	./$(DEPDIR)/gnunet-service-resolver.Po \
	./$(DEPDIR)/gnunet-timeout.Po ./$(DEPDIR)/gnunet-uri.Po \
	./$(DEPDIR)/helper.Plo ./$(DEPDIR)/load.Plo ./$(DEPDIR)/mq.Plo \
	./$(DEPDIR)/mst.Plo ./$(DEPDIR)/nc.Plo ./$(DEPDIR)/network.Plo \
	./$(DEPDIR)/op.Plo ./$(DEPDIR)/os_installation.Plo \
	./$(DEPDIR)/os_network.Plo ./$(DEPDIR)/os_priority.Plo \
	./$(DEPDIR)/peer.Plo ./$(DEPDIR)/perf_crypto_asymmetric.Po \
	./$(DEPDIR)/perf_crypto_ecc_dlog.Po \
	./$(DEPDIR)/perf_crypto_hash.Po \
	./$(DEPDIR)/perf_crypto_paillier.Po \
	./$(DEPDIR)/perf_crypto_rsa.Po \
	./$(DEPDIR)/perf_crypto_symmetric.Po \
	./$(DEPDIR)/perf_malloc.Po ./$(DEPDIR)/plugin.Plo \
	./$(DEPDIR)/proc_compat.Plo ./$(DEPDIR)/program.Plo \
	./$(DEPDIR)/regex.Plo ./$(DEPDIR)/resolver_api.Plo \
	./$(DEPDIR)/scheduler.Plo ./$(DEPDIR)/service.Plo \
	./$(DEPDIR)/signal.Plo ./$(DEPDIR)/speedup.Plo \
	./$(DEPDIR)/strings.Plo ./$(DEPDIR)/test_bio.Po \
	./$(DEPDIR)/test_client.Po \
	./$(DEPDIR)/test_common_allocation.Po \
	./$(DEPDIR)/test_common_endian.Po \
	./$(DEPDIR)/test_common_logging.Po \
	./$(DEPDIR)/test_common_logging_dummy.Po \
	./$(DEPDIR)/test_common_logging_runtime_loglevels.Po \
	./$(DEPDIR)/test_configuration.Po \
	./$(DEPDIR)/test_container_bloomfilter.Po \
	./$(DEPDIR)/test_container_dll.Po \
	./$(DEPDIR)/test_container_heap.Po \
	./$(DEPDIR)/test_container_meta_data.Po \
	./$(DEPDIR)/test_container_multihashmap.Po \
	./$(DEPDIR)/test_container_multihashmap32.Po \
	./$(DEPDIR)/test_container_multipeermap.Po \
	./$(DEPDIR)/test_crypto_crc.Po \
	./$(DEPDIR)/test_crypto_ecc_dlog.Po \
	./$(DEPDIR)/test_crypto_ecdh_eddsa.Po \
	./$(DEPDIR)/test_crypto_ecdhe.Po \
	./$(DEPDIR)/test_crypto_ecdsa.Po \
	./$(DEPDIR)/test_crypto_eddsa.Po \
	./$(DEPDIR)/test_crypto_hash.Po \
	./$(DEPDIR)/test_crypto_hash_context.Po \
	./$(DEPDIR)/test_crypto_hkdf.Po ./$(DEPDIR)/test_crypto_kdf.Po \
	./$(DEPDIR)/test_crypto_paillier.Po \
	./$(DEPDIR)/test_crypto_random.Po \
	./$(DEPDIR)/test_crypto_rsa.Po \
	./$(DEPDIR)/test_crypto_symmetric.Po ./$(DEPDIR)/test_disk.Po \
	./$(DEPDIR)/test_getopt.Po ./$(DEPDIR)/test_hexcoder.Po \
	./$(DEPDIR)/test_mq.Po ./$(DEPDIR)/test_os_network.Po \
	./$(DEPDIR)/test_os_start_process.Po ./$(DEPDIR)/test_peer.Po \
	./$(DEPDIR)/test_plugin.Po ./$(DEPDIR)/test_plugin_plug.Plo \
	./$(DEPDIR)/test_program.Po ./$(DEPDIR)/test_regex.Po \
	./$(DEPDIR)/test_resolver_api.Po ./$(DEPDIR)/test_scheduler.Po \
	./$(DEPDIR)/test_scheduler_delay.Po \
	./$(DEPDIR)/test_service.Po ./$(DEPDIR)/test_speedup.Po \
	./$(DEPDIR)/test_strings.Po \
	./$(DEPDIR)/test_strings_to_data.Po ./$(DEPDIR)/test_time.Po \
	./$(DEPDIR)/test_tun.Po ./$(DEPDIR)/time.Plo \
	./$(DEPDIR)/tun.Plo ./$(DEPDIR)/tweetnacl-gnunet.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libgnunet_plugin_test_la_SOURCES) \
	$(libgnunetutil_la_SOURCES) \
	$(libgnunetutil_taler_wallet_la_SOURCES) \
	$(gnunet_config_SOURCES) $(gnunet_config_diff_SOURCES) \
	$(gnunet_ecc_SOURCES) $(gnunet_qr_SOURCES) \
	$(gnunet_resolver_SOURCES) $(gnunet_scrypt_SOURCES) \
	$(gnunet_service_resolver_SOURCES) $(gnunet_timeout_SOURCES) \
	$(gnunet_uri_SOURCES) $(perf_crypto_asymmetric_SOURCES) \
	$(perf_crypto_ecc_dlog_SOURCES) $(perf_crypto_hash_SOURCES) \
	$(perf_crypto_paillier_SOURCES) $(perf_crypto_rsa_SOURCES) \
	$(perf_crypto_symmetric_SOURCES) $(perf_malloc_SOURCES) \
	$(test_bio_SOURCES) $(test_client_nc_SOURCES) \
	$(test_client_unix_nc_SOURCES) \
	$(test_common_allocation_SOURCES) \
	$(test_common_endian_SOURCES) $(test_common_logging_SOURCES) \
	$(test_common_logging_dummy_SOURCES) \
	$(test_common_logging_runtime_loglevels_SOURCES) \
	$(test_configuration_SOURCES) \
	$(test_container_bloomfilter_SOURCES) \
	$(test_container_dll_SOURCES) $(test_container_heap_SOURCES) \
	$(test_container_meta_data_SOURCES) \
	$(test_container_multihashmap_SOURCES) \
	$(test_container_multihashmap32_SOURCES) \
	$(test_container_multipeermap_SOURCES) \
	$(test_crypto_crc_SOURCES) $(test_crypto_ecc_dlog_SOURCES) \
	$(test_crypto_ecdh_eddsa_SOURCES) $(test_crypto_ecdhe_SOURCES) \
	$(test_crypto_ecdsa_SOURCES) $(test_crypto_eddsa_SOURCES) \
	$(test_crypto_hash_SOURCES) \
	$(test_crypto_hash_context_SOURCES) \
	$(test_crypto_hkdf_SOURCES) $(test_crypto_kdf_SOURCES) \
	$(test_crypto_paillier_SOURCES) $(test_crypto_random_SOURCES) \
	$(test_crypto_rsa_SOURCES) $(test_crypto_symmetric_SOURCES) \
	$(test_disk_SOURCES) $(test_getopt_SOURCES) \
	$(test_hexcoder_SOURCES) $(test_mq_SOURCES) \
	$(test_os_network_SOURCES) $(test_os_start_process_SOURCES) \
	$(test_peer_SOURCES) $(test_plugin_SOURCES) \
	$(test_program_SOURCES) $(test_regex_SOURCES) \
	$(test_resolver_api_nc_SOURCES) $(test_scheduler_SOURCES) \
	$(test_scheduler_delay_SOURCES) $(test_service_SOURCES) \
	$(test_speedup_SOURCES) $(test_strings_SOURCES) \
	$(test_strings_to_data_SOURCES) $(test_time_SOURCES) \
	$(test_tun_SOURCES)
DIST_SOURCES = $(libgnunet_plugin_test_la_SOURCES) \
	$(am__libgnunetutil_la_SOURCES_DIST) \
	$(libgnunetutil_taler_wallet_la_SOURCES) \
	$(gnunet_config_SOURCES) $(gnunet_config_diff_SOURCES) \
	$(gnunet_ecc_SOURCES) $(gnunet_qr_SOURCES) \
	$(gnunet_resolver_SOURCES) $(gnunet_scrypt_SOURCES) \
	$(gnunet_service_resolver_SOURCES) $(gnunet_timeout_SOURCES) \
	$(gnunet_uri_SOURCES) $(perf_crypto_asymmetric_SOURCES) \
	$(perf_crypto_ecc_dlog_SOURCES) $(perf_crypto_hash_SOURCES) \
	$(perf_crypto_paillier_SOURCES) $(perf_crypto_rsa_SOURCES) \
	$(perf_crypto_symmetric_SOURCES) $(perf_malloc_SOURCES) \
	$(test_bio_SOURCES) $(test_client_nc_SOURCES) \
	$(test_client_unix_nc_SOURCES) \
	$(test_common_allocation_SOURCES) \
	$(test_common_endian_SOURCES) $(test_common_logging_SOURCES) \
	$(test_common_logging_dummy_SOURCES) \
	$(test_common_logging_runtime_loglevels_SOURCES) \
	$(test_configuration_SOURCES) \
	$(test_container_bloomfilter_SOURCES) \
	$(test_container_dll_SOURCES) $(test_container_heap_SOURCES) \
	$(test_container_meta_data_SOURCES) \
	$(test_container_multihashmap_SOURCES) \
	$(test_container_multihashmap32_SOURCES) \
	$(test_container_multipeermap_SOURCES) \
	$(test_crypto_crc_SOURCES) $(test_crypto_ecc_dlog_SOURCES) \
	$(test_crypto_ecdh_eddsa_SOURCES) $(test_crypto_ecdhe_SOURCES) \
	$(test_crypto_ecdsa_SOURCES) $(test_crypto_eddsa_SOURCES) \
	$(test_crypto_hash_SOURCES) \
	$(test_crypto_hash_context_SOURCES) \
	$(test_crypto_hkdf_SOURCES) $(test_crypto_kdf_SOURCES) \
	$(test_crypto_paillier_SOURCES) $(test_crypto_random_SOURCES) \
	$(test_crypto_rsa_SOURCES) $(test_crypto_symmetric_SOURCES) \
	$(test_disk_SOURCES) $(test_getopt_SOURCES) \
	$(test_hexcoder_SOURCES) $(test_mq_SOURCES) \
	$(test_os_network_SOURCES) $(test_os_start_process_SOURCES) \
	$(test_peer_SOURCES) $(test_plugin_SOURCES) \
	$(test_program_SOURCES) $(test_regex_SOURCES) \
	$(test_resolver_api_nc_SOURCES) $(test_scheduler_SOURCES) \
	$(test_scheduler_delay_SOURCES) $(test_service_SOURCES) \
	$(test_speedup_SOURCES) $(test_strings_SOURCES) \
	$(test_strings_to_data_SOURCES) $(test_time_SOURCES) \
	$(test_tun_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(dist_pkgcfg_DATA) $(pkgcfg_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.nc.log=.log)
NC_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
NC_LOG_COMPILE = $(NC_LOG_COMPILER) $(AM_NC_LOG_FLAGS) $(NC_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/resolver.conf.in \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
AWK_BINARY = @AWK_BINARY@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CHECKBASHISMS_BINARY = @CHECKBASHISMS_BINARY@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DATAROOTDIR = @DATAROOTDIR@
DEFAULT_INTERFACE = @DEFAULT_INTERFACE@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLDIR = @DLLDIR@
DLLTOOL = @DLLTOOL@
DOAS_BINARY = @DOAS_BINARY@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXT_LIBS = @EXT_LIBS@
EXT_LIB_PATH = @EXT_LIB_PATH@
FGREP = @FGREP@
GETTEXT_MACRO_VERSION = @GETTEXT_MACRO_VERSION@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@
GMSGFMT = @GMSGFMT@
GMSGFMT_015 = @GMSGFMT_015@
GNUNETDNS_GROUP = @GNUNETDNS_GROUP@
GN_INTLINCL = @GN_INTLINCL@
GN_LIBINTL = @GN_LIBINTL@
GN_LIB_LDFLAGS = @GN_LIB_LDFLAGS@
GN_PLUGIN_LDFLAGS = @GN_PLUGIN_LDFLAGS@
GREP = @GREP@
GST_CFLAGS = @GST_CFLAGS@
GST_LIBS = @GST_LIBS@
HAVE_BLUETOOTH = @HAVE_BLUETOOTH@
HAVE_JANSSON = @HAVE_JANSSON@
HAVE_LIBOGG = @HAVE_LIBOGG@
HAVE_LIBOPUS = @HAVE_LIBOPUS@
HAVE_LIBPULSE = @HAVE_LIBPULSE@
HAVE_LIBUNISTRING = @HAVE_LIBUNISTRING@
HAVE_ZBAR = @HAVE_ZBAR@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INTLLIBS = @INTLLIBS@
INTL_MACOSX_LIBS = @INTL_MACOSX_LIBS@
JAVAPORT = @JAVAPORT@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBCURL = @LIBCURL@
LIBCURL_CPPFLAGS = @LIBCURL_CPPFLAGS@
LIBGCRYPT_CFLAGS = @LIBGCRYPT_CFLAGS@
LIBGCRYPT_CONFIG = @LIBGCRYPT_CONFIG@
LIBGCRYPT_LIBS = @LIBGCRYPT_LIBS@
LIBGNURL = @LIBGNURL@
LIBGNURL_CPPFLAGS = @LIBGNURL_CPPFLAGS@
LIBICONV = @LIBICONV@
LIBINTL = @LIBINTL@
LIBOBJS = @LIBOBJS@
LIBPREFIX = @LIBPREFIX@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBUNISTRING = @LIBUNISTRING@
LIBUNISTRING_PREFIX = @LIBUNISTRING_PREFIX@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBICONV = @LTLIBICONV@
LTLIBINTL = @LTLIBINTL@
LTLIBOBJS = @LTLIBOBJS@
LTLIBUNISTRING = @LTLIBUNISTRING@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAKEINFO = @MAKEINFO@
MANDOC_BINARY = @MANDOC_BINARY@
MANIFEST_TOOL = @MANIFEST_TOOL@
MHD_CFLAGS = @MHD_CFLAGS@
MHD_LIBS = @MHD_LIBS@
MKDIR_P = @MKDIR_P@
MSGFMT = @MSGFMT@
MSGFMT_015 = @MSGFMT_015@
MSGMERGE = @MSGMERGE@
MSG_USER_SETUP = @MSG_USER_SETUP@
MYSQL_CPPFLAGS = @MYSQL_CPPFLAGS@
MYSQL_LDFLAGS = @MYSQL_LDFLAGS@
NM = @NM@
NMEDIT = @NMEDIT@
OBJC = @OBJC@
OBJCDEPMODE = @OBJCDEPMODE@
OBJCFLAGS = @OBJCFLAGS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POSTGRESQL_CPPFLAGS = @POSTGRESQL_CPPFLAGS@
POSTGRESQL_LDFLAGS = @POSTGRESQL_LDFLAGS@
POSTGRESQL_LIBFLAGS = @POSTGRESQL_LIBFLAGS@
POSTGRESQL_LIBS = @POSTGRESQL_LIBS@
POSTGRESQL_VERSION = @POSTGRESQL_VERSION@
POSUB = @POSUB@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SQLITE_CPPFLAGS = @SQLITE_CPPFLAGS@
SQLITE_LDFLAGS = @SQLITE_LDFLAGS@
START_ON_DEMAND = @START_ON_DEMAND@
STRIP = @STRIP@
SUDO_BINARY = @SUDO_BINARY@
TEXI2MAN_SCRIPT = @TEXI2MAN_SCRIPT@
TEXI2MDOC_BINARY = @TEXI2MDOC_BINARY@
UNCRUSTIFY_BINARY = @UNCRUSTIFY_BINARY@
UNIXONLY = @UNIXONLY@
USE_NLS = @USE_NLS@
VAR_GETOPT_BINARY = @VAR_GETOPT_BINARY@
VAR_IFCONFIG_BINARY = @VAR_IFCONFIG_BINARY@
VAR_IP6TABLES_BINARY = @VAR_IP6TABLES_BINARY@
VAR_IPTABLES_BINARY = @VAR_IPTABLES_BINARY@
VAR_IP_BINARY = @VAR_IP_BINARY@
VAR_SSH_BINARY = @VAR_SSH_BINARY@
VAR_SYSCTL_BINARY = @VAR_SYSCTL_BINARY@
VAR_UPNPC_BINARY = @VAR_UPNPC_BINARY@
VERSION = @VERSION@
XGETTEXT = @XGETTEXT@
XGETTEXT_015 = @XGETTEXT_015@
XGETTEXT_EXTRA_OPTIONS = @XGETTEXT_EXTRA_OPTIONS@
XMKMF = @XMKMF@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
YAPF_BINARY = @YAPF_BINARY@
Z_CFLAGS = @Z_CFLAGS@
Z_LIBS = @Z_LIBS@
_libcurl_config = @_libcurl_config@
_libgnurl_config = @_libgnurl_config@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_OBJC = @ac_ct_OBJC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_target = @build_target@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
features_msg = @features_msg@
gitcommand = @gitcommand@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = $(pkglibdir)/libexec/
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
svnversioncommand = @svnversioncommand@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# This Makefile.am is in the public domain
AM_CPPFLAGS = -I$(top_srcdir)/src/include
plugindir = $(libdir)/gnunet
pkgcfgdir = $(pkgdatadir)/config.d/
dist_pkgcfg_DATA = \
  util.conf

pkgcfg_DATA = \
  resolver.conf

TEST_CLIENT_UNIX_NC = test_client_unix.nc
@USE_COVERAGE_TRUE@AM_CFLAGS = --coverage -O0
@USE_COVERAGE_TRUE@XLIB = -lgcov
@ENABLE_BENCHMARK_TRUE@BENCHMARK = benchmark.c benchmark.h
@ENABLE_BENCHMARK_TRUE@PTHREAD = -lpthread
gnunet_config_diff_SOURCES = \
 gnunet-config-diff.c

gnunet_config_diff_LDADD = \
 libgnunetutil.la

test_common_logging_dummy_SOURCES = \
 test_common_logging_dummy.c

test_common_logging_dummy_LDADD = \
 libgnunetutil.la

libgnunetutil_la_SOURCES = \
  bandwidth.c \
  $(BENCHMARK) \
  bio.c \
  client.c \
  common_allocation.c \
  common_endian.c \
  common_logging.c \
  configuration.c \
  configuration_loader.c \
  container_bloomfilter.c \
  container_heap.c \
  container_meta_data.c \
  container_multihashmap.c \
  container_multishortmap.c \
  container_multiuuidmap.c \
  container_multipeermap.c \
  container_multihashmap32.c \
  crypto_symmetric.c \
  crypto_crc.c \
  crypto_ecc.c \
  crypto_ecc_dlog.c \
  crypto_ecc_setup.c \
  crypto_hash.c \
  crypto_hash_file.c \
  crypto_hkdf.c \
  crypto_kdf.c \
  crypto_mpi.c \
  crypto_paillier.c \
  crypto_pow.c \
  crypto_random.c \
  crypto_rsa.c \
  disk.c \
  disk.h \
  dnsparser.c \
  dnsstub.c \
  getopt.c \
  getopt_helpers.c \
  helper.c \
  load.c \
  mst.c \
  mq.c \
  nc.c \
  network.c \
  op.c \
  os_installation.c \
  os_network.c \
  os_priority.c \
  peer.c \
  plugin.c \
  program.c \
  regex.c \
  resolver_api.c resolver.h \
  scheduler.c \
  service.c \
  signal.c \
  strings.c \
  time.c \
  tun.c \
  tweetnacl-gnunet.c \
  tweetnacl-gnunet.h \
  speedup.c speedup.h \
  proc_compat.c

@DARWIN_FALSE@@HAVE_LIBATOMIC_TRUE@LIBATOMIC = -latomic
@HAVE_LIBATOMIC_FALSE@LIBATOMIC = 
@HAVE_LIBIDN_FALSE@LIBIDN = 
@HAVE_LIBIDN_TRUE@LIBIDN = -lidn
@HAVE_LIBIDN2_FALSE@LIBIDN2 = 
@HAVE_LIBIDN2_TRUE@LIBIDN2 = -lidn2
libgnunetutil_la_LIBADD = \
  $(GCLIBADD) $(WINLIB) \
  $(LIBATOMIC) \
  $(LIBGCRYPT_LIBS) \
  $(LTLIBICONV) \
  $(LTLIBINTL) \
  -lltdl \
  $(LIBIDN) $(LIBIDN2) \
  $(Z_LIBS) \
  -lunistring \
  $(XLIB) \
  $(PTHREAD)

libgnunetutil_la_LDFLAGS = \
  $(GN_LIB_LDFLAGS) \
  -version-info 13:2:0

libgnunetutil_taler_wallet_la_SOURCES = \
  common_allocation.c \
  common_endian.c \
  common_logging.c \
  container_heap.c \
  container_multihashmap.c \
  container_multihashmap32.c \
  crypto_symmetric.c \
  crypto_crc.c \
  crypto_ecc.c \
  crypto_hash.c \
  crypto_hkdf.c \
  crypto_kdf.c \
  crypto_mpi.c \
  crypto_random.c \
  crypto_rsa.c \
  strings.c \
  time.c

libgnunetutil_taler_wallet_la_LIBADD = \
  $(LIBGCRYPT_LIBS) \
  -lunistring

libgnunetutil_taler_wallet_la_LDFLAGS = \
  $(GN_LIB_LDFLAGS) \
  -version-info 0:0:0

@HAVE_TESTING_TRUE@GNUNET_ECC = gnunet-ecc
@HAVE_TESTING_TRUE@GNUNET_SCRYPT = gnunet-scrypt
@TALER_ONLY_FALSE@lib_LTLIBRARIES = libgnunetutil.la
@TALER_ONLY_TRUE@lib_LTLIBRARIES = libgnunetutil_taler_wallet.la
@ENABLE_TEST_RUN_TRUE@@TALER_ONLY_FALSE@AM_TESTS_ENVIRONMENT = export GNUNET_PREFIX=$${GNUNET_PREFIX:-@libdir@};export PATH=$${GNUNET_PREFIX:-@prefix@}/bin:$$PATH;unset XDG_DATA_HOME;unset XDG_CONFIG_HOME;
@ENABLE_TEST_RUN_TRUE@@TALER_ONLY_FALSE@TESTS = $(check_PROGRAMS)
gnunet_timeout_SOURCES = \
 gnunet-timeout.c

gnunet_service_resolver_SOURCES = \
 gnunet-service-resolver.c

gnunet_service_resolver_LDADD = libgnunetutil.la $(GN_LIBINTL) \
	$(am__append_2)
gnunet_resolver_SOURCES = \
 gnunet-resolver.c

gnunet_resolver_LDADD = \
  libgnunetutil.la \
  $(GN_LIBINTL)

gnunet_ecc_SOURCES = \
 gnunet-ecc.c

gnunet_ecc_LDADD = \
  libgnunetutil.la \
  $(GN_LIBINTL) -lgcrypt

gnunet_scrypt_SOURCES = \
 gnunet-scrypt.c

gnunet_scrypt_LDADD = \
  libgnunetutil.la \
  $(GN_LIBINTL) -lgcrypt

gnunet_config_SOURCES = \
 gnunet-config.c

gnunet_config_LDADD = \
  libgnunetutil.la \
  $(GN_LIBINTL)

gnunet_uri_SOURCES = \
 gnunet-uri.c

gnunet_uri_LDADD = \
  libgnunetutil.la \
  $(GN_LIBINTL)

gnunet_qr_SOURCES = \
  gnunet-qr.c

gnunet_qr_LDADD = \
  libgnunetutil.la \
  $(GN_LIBINTL)

gnunet_qr_LDFLAGS = -lzbar
plugin_LTLIBRARIES = \
  libgnunet_plugin_test.la

libgnunet_plugin_test_la_SOURCES = \
  test_plugin_plug.c

libgnunet_plugin_test_la_LDFLAGS = \
 $(GN_PLUGIN_LDFLAGS)

@HAVE_BENCHMARKS_TRUE@BENCHMARKS = \
@HAVE_BENCHMARKS_TRUE@  perf_crypto_hash \
@HAVE_BENCHMARKS_TRUE@  perf_crypto_ecc_dlog \
@HAVE_BENCHMARKS_TRUE@  perf_crypto_rsa \
@HAVE_BENCHMARKS_TRUE@  perf_crypto_paillier \
@HAVE_BENCHMARKS_TRUE@  perf_crypto_symmetric \
@HAVE_BENCHMARKS_TRUE@  perf_crypto_asymmetric \
@HAVE_BENCHMARKS_TRUE@  perf_malloc


# Declare .nc (NO-CONCURRENCY) as a test extension so that we can impart
# sequential execution order for them
TEST_EXTENSIONS = .nc
test_bio_SOURCES = \
 test_bio.c

test_bio_LDADD = \
 libgnunetutil.la

test_hexcoder_SOURCES = \
 test_hexcoder.c

test_hexcoder_LDADD = \
 libgnunetutil.la

test_tun_SOURCES = \
 test_tun.c

test_tun_LDADD = \
 libgnunetutil.la

test_regex_SOURCES = \
 test_regex.c

test_regex_LDADD = \
 libgnunetutil.la

test_os_start_process_SOURCES = \
 test_os_start_process.c

test_os_start_process_LDADD = \
 libgnunetutil.la

test_os_start_process_DEPENDENCIES = \
 libgnunetutil.la

test_client_nc_SOURCES = \
 test_client.c

test_client_nc_LDADD = \
 libgnunetutil.la

test_client_unix_nc_SOURCES = \
 test_client.c

test_client_unix_nc_LDADD = \
 libgnunetutil.la


#test_socks_nc_SOURCES = \
# test_socks.c
#test_socks_nc_LDADD = \
# libgnunetutil.la
test_common_allocation_SOURCES = \
 test_common_allocation.c

test_common_allocation_LDADD = \
 libgnunetutil.la

test_common_endian_SOURCES = \
 test_common_endian.c

test_common_endian_LDADD = \
 libgnunetutil.la

test_common_logging_SOURCES = \
 test_common_logging.c

test_common_logging_LDADD = \
 libgnunetutil.la

test_common_logging_runtime_loglevels_SOURCES = \
 test_common_logging_runtime_loglevels.c

test_common_logging_runtime_loglevels_LDADD = \
 libgnunetutil.la

test_configuration_SOURCES = \
 test_configuration.c

test_configuration_LDADD = \
 libgnunetutil.la

test_container_bloomfilter_SOURCES = \
 test_container_bloomfilter.c

test_container_bloomfilter_LDADD = \
 libgnunetutil.la

test_container_dll_SOURCES = \
 test_container_dll.c

test_container_dll_LDADD = \
 libgnunetutil.la

test_container_meta_data_SOURCES = \
 test_container_meta_data.c

test_container_meta_data_LDADD = \
 libgnunetutil.la

test_container_multihashmap_SOURCES = \
 test_container_multihashmap.c

test_container_multihashmap_LDADD = \
 libgnunetutil.la

test_container_multihashmap32_SOURCES = \
 test_container_multihashmap32.c

test_container_multihashmap32_LDADD = \
 libgnunetutil.la

test_container_multipeermap_SOURCES = \
 test_container_multipeermap.c

test_container_multipeermap_LDADD = \
 libgnunetutil.la

test_container_heap_SOURCES = \
 test_container_heap.c

test_container_heap_LDADD = \
 libgnunetutil.la

test_crypto_symmetric_SOURCES = \
 test_crypto_symmetric.c

test_crypto_symmetric_LDADD = \
 libgnunetutil.la

test_crypto_crc_SOURCES = \
 test_crypto_crc.c

test_crypto_crc_LDADD = \
 libgnunetutil.la

test_crypto_ecdsa_SOURCES = \
 test_crypto_ecdsa.c

test_crypto_ecdsa_LDADD = \
 libgnunetutil.la \
 $(LIBGCRYPT_LIBS)

test_crypto_eddsa_SOURCES = \
 test_crypto_eddsa.c

test_crypto_eddsa_LDADD = \
 libgnunetutil.la \
 $(LIBGCRYPT_LIBS)

test_crypto_ecc_dlog_SOURCES = \
 test_crypto_ecc_dlog.c

test_crypto_ecc_dlog_LDADD = \
 libgnunetutil.la \
 $(LIBGCRYPT_LIBS)

test_crypto_ecdhe_SOURCES = \
 test_crypto_ecdhe.c

test_crypto_ecdhe_LDADD = \
 libgnunetutil.la \
 $(LIBGCRYPT_LIBS)

test_crypto_ecdh_eddsa_SOURCES = \
 test_crypto_ecdh_eddsa.c

test_crypto_ecdh_eddsa_LDADD = \
 libgnunetutil.la \
 $(LIBGCRYPT_LIBS)

test_crypto_hash_SOURCES = \
 test_crypto_hash.c

test_crypto_hash_LDADD = \
 libgnunetutil.la

test_crypto_hash_context_SOURCES = \
 test_crypto_hash_context.c

test_crypto_hash_context_LDADD = \
 libgnunetutil.la

test_crypto_hkdf_SOURCES = \
 test_crypto_hkdf.c

test_crypto_hkdf_LDADD = \
 libgnunetutil.la

test_crypto_kdf_SOURCES = \
 test_crypto_kdf.c

test_crypto_kdf_LDADD = \
 libgnunetutil.la -lgcrypt

test_crypto_paillier_SOURCES = \
 test_crypto_paillier.c

test_crypto_paillier_LDADD = \
 $(LIBGCRYPT_LIBS) \
 libgnunetutil.la

test_crypto_random_SOURCES = \
 test_crypto_random.c

test_crypto_random_LDADD = \
 libgnunetutil.la

test_crypto_rsa_SOURCES = \
 test_crypto_rsa.c

test_crypto_rsa_LDADD = \
 libgnunetutil.la -lgcrypt

test_disk_SOURCES = \
 test_disk.c

test_disk_LDADD = \
 libgnunetutil.la

test_getopt_SOURCES = \
 test_getopt.c

test_getopt_LDADD = \
 libgnunetutil.la

test_mq_SOURCES = \
 test_mq.c

test_mq_LDADD = \
 libgnunetutil.la

test_os_network_SOURCES = \
 test_os_network.c

test_os_network_LDADD = \
 libgnunetutil.la

test_peer_SOURCES = \
 test_peer.c

test_peer_LDADD = \
 libgnunetutil.la -lgcrypt

test_plugin_SOURCES = \
 test_plugin.c

test_plugin_LDADD = \
 libgnunetutil.la

test_program_SOURCES = \
 test_program.c

test_program_LDADD = \
 libgnunetutil.la

test_resolver_api_nc_SOURCES = \
 test_resolver_api.c

test_resolver_api_nc_LDADD = \
 libgnunetutil.la

test_scheduler_SOURCES = \
 test_scheduler.c

test_scheduler_LDADD = \
 libgnunetutil.la

test_scheduler_delay_SOURCES = \
 test_scheduler_delay.c

test_scheduler_delay_LDADD = \
 libgnunetutil.la

test_service_SOURCES = \
 test_service.c

test_service_LDADD = \
 libgnunetutil.la

test_strings_SOURCES = \
 test_strings.c

test_strings_LDADD = \
 libgnunetutil.la

test_strings_to_data_SOURCES = \
 test_strings_to_data.c

test_strings_to_data_LDADD = \
 libgnunetutil.la

test_time_SOURCES = \
 test_time.c

test_time_LDADD = \
 libgnunetutil.la

test_speedup_SOURCES = \
 test_speedup.c

test_speedup_LDADD = \
 libgnunetutil.la

perf_crypto_hash_SOURCES = \
 perf_crypto_hash.c

perf_crypto_hash_LDADD = \
 libgnunetutil.la

perf_crypto_ecc_dlog_SOURCES = \
 perf_crypto_ecc_dlog.c

perf_crypto_ecc_dlog_LDADD = \
 libgnunetutil.la \
 -lgcrypt

perf_crypto_rsa_SOURCES = \
 perf_crypto_rsa.c

perf_crypto_rsa_LDADD = \
 libgnunetutil.la

perf_crypto_symmetric_SOURCES = \
 perf_crypto_symmetric.c

perf_crypto_symmetric_LDADD = \
 libgnunetutil.la

perf_crypto_asymmetric_SOURCES = \
 perf_crypto_asymmetric.c

perf_crypto_asymmetric_LDADD = \
 libgnunetutil.la

perf_crypto_paillier_SOURCES = \
 perf_crypto_paillier.c

perf_crypto_paillier_LDADD = \
 libgnunetutil.la \
 -lgcrypt

perf_malloc_SOURCES = \
 perf_malloc.c

perf_malloc_LDADD = \
 libgnunetutil.la

EXTRA_DIST = \
  test_client_data.conf \
  test_client_unix.conf \
  test_configuration_data.conf \
  test_program_data.conf \
  test_resolver_api_data.conf \
  test_service_data.conf \
  test_speedup_data.conf

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .nc .nc$(EXEEXT) .o .obj .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/util/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/util/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
resolver.conf: $(top_builddir)/config.status $(srcdir)/resolver.conf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-libexecPROGRAMS: $(libexec_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(libexec_PROGRAMS)'; test -n "$(libexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libexecdir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(libexecdir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(libexecdir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-libexecPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(libexec_PROGRAMS)'; test -n "$(libexecdir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libexecdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(libexecdir)" && rm -f $$files

clean-libexecPROGRAMS:
	@list='$(libexec_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-pluginLTLIBRARIES: $(plugin_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(plugin_LTLIBRARIES)'; test -n "$(plugindir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(plugindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(plugindir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(plugindir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(plugindir)"; \
	}

uninstall-pluginLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(plugin_LTLIBRARIES)'; test -n "$(plugindir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(plugindir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(plugindir)/$$f"; \
	done

clean-pluginLTLIBRARIES:
	-test -z "$(plugin_LTLIBRARIES)" || rm -f $(plugin_LTLIBRARIES)
	@list='$(plugin_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libgnunet_plugin_test.la: $(libgnunet_plugin_test_la_OBJECTS) $(libgnunet_plugin_test_la_DEPENDENCIES) $(EXTRA_libgnunet_plugin_test_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libgnunet_plugin_test_la_LINK) -rpath $(plugindir) $(libgnunet_plugin_test_la_OBJECTS) $(libgnunet_plugin_test_la_LIBADD) $(LIBS)

libgnunetutil.la: $(libgnunetutil_la_OBJECTS) $(libgnunetutil_la_DEPENDENCIES) $(EXTRA_libgnunetutil_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libgnunetutil_la_LINK) $(am_libgnunetutil_la_rpath) $(libgnunetutil_la_OBJECTS) $(libgnunetutil_la_LIBADD) $(LIBS)

libgnunetutil_taler_wallet.la: $(libgnunetutil_taler_wallet_la_OBJECTS) $(libgnunetutil_taler_wallet_la_DEPENDENCIES) $(EXTRA_libgnunetutil_taler_wallet_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libgnunetutil_taler_wallet_la_LINK) $(am_libgnunetutil_taler_wallet_la_rpath) $(libgnunetutil_taler_wallet_la_OBJECTS) $(libgnunetutil_taler_wallet_la_LIBADD) $(LIBS)

gnunet-config$(EXEEXT): $(gnunet_config_OBJECTS) $(gnunet_config_DEPENDENCIES) $(EXTRA_gnunet_config_DEPENDENCIES) 
	@rm -f gnunet-config$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gnunet_config_OBJECTS) $(gnunet_config_LDADD) $(LIBS)

gnunet-config-diff$(EXEEXT): $(gnunet_config_diff_OBJECTS) $(gnunet_config_diff_DEPENDENCIES) $(EXTRA_gnunet_config_diff_DEPENDENCIES) 
	@rm -f gnunet-config-diff$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gnunet_config_diff_OBJECTS) $(gnunet_config_diff_LDADD) $(LIBS)

gnunet-ecc$(EXEEXT): $(gnunet_ecc_OBJECTS) $(gnunet_ecc_DEPENDENCIES) $(EXTRA_gnunet_ecc_DEPENDENCIES) 
	@rm -f gnunet-ecc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gnunet_ecc_OBJECTS) $(gnunet_ecc_LDADD) $(LIBS)

gnunet-qr$(EXEEXT): $(gnunet_qr_OBJECTS) $(gnunet_qr_DEPENDENCIES) $(EXTRA_gnunet_qr_DEPENDENCIES) 
	@rm -f gnunet-qr$(EXEEXT)
	$(AM_V_CCLD)$(gnunet_qr_LINK) $(gnunet_qr_OBJECTS) $(gnunet_qr_LDADD) $(LIBS)

gnunet-resolver$(EXEEXT): $(gnunet_resolver_OBJECTS) $(gnunet_resolver_DEPENDENCIES) $(EXTRA_gnunet_resolver_DEPENDENCIES) 
	@rm -f gnunet-resolver$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gnunet_resolver_OBJECTS) $(gnunet_resolver_LDADD) $(LIBS)

gnunet-scrypt$(EXEEXT): $(gnunet_scrypt_OBJECTS) $(gnunet_scrypt_DEPENDENCIES) $(EXTRA_gnunet_scrypt_DEPENDENCIES) 
	@rm -f gnunet-scrypt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gnunet_scrypt_OBJECTS) $(gnunet_scrypt_LDADD) $(LIBS)

gnunet-service-resolver$(EXEEXT): $(gnunet_service_resolver_OBJECTS) $(gnunet_service_resolver_DEPENDENCIES) $(EXTRA_gnunet_service_resolver_DEPENDENCIES) 
	@rm -f gnunet-service-resolver$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gnunet_service_resolver_OBJECTS) $(gnunet_service_resolver_LDADD) $(LIBS)

gnunet-timeout$(EXEEXT): $(gnunet_timeout_OBJECTS) $(gnunet_timeout_DEPENDENCIES) $(EXTRA_gnunet_timeout_DEPENDENCIES) 
	@rm -f gnunet-timeout$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gnunet_timeout_OBJECTS) $(gnunet_timeout_LDADD) $(LIBS)

gnunet-uri$(EXEEXT): $(gnunet_uri_OBJECTS) $(gnunet_uri_DEPENDENCIES) $(EXTRA_gnunet_uri_DEPENDENCIES) 
	@rm -f gnunet-uri$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gnunet_uri_OBJECTS) $(gnunet_uri_LDADD) $(LIBS)

perf_crypto_asymmetric$(EXEEXT): $(perf_crypto_asymmetric_OBJECTS) $(perf_crypto_asymmetric_DEPENDENCIES) $(EXTRA_perf_crypto_asymmetric_DEPENDENCIES) 
	@rm -f perf_crypto_asymmetric$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_crypto_asymmetric_OBJECTS) $(perf_crypto_asymmetric_LDADD) $(LIBS)

perf_crypto_ecc_dlog$(EXEEXT): $(perf_crypto_ecc_dlog_OBJECTS) $(perf_crypto_ecc_dlog_DEPENDENCIES) $(EXTRA_perf_crypto_ecc_dlog_DEPENDENCIES) 
	@rm -f perf_crypto_ecc_dlog$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_crypto_ecc_dlog_OBJECTS) $(perf_crypto_ecc_dlog_LDADD) $(LIBS)

perf_crypto_hash$(EXEEXT): $(perf_crypto_hash_OBJECTS) $(perf_crypto_hash_DEPENDENCIES) $(EXTRA_perf_crypto_hash_DEPENDENCIES) 
	@rm -f perf_crypto_hash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_crypto_hash_OBJECTS) $(perf_crypto_hash_LDADD) $(LIBS)

perf_crypto_paillier$(EXEEXT): $(perf_crypto_paillier_OBJECTS) $(perf_crypto_paillier_DEPENDENCIES) $(EXTRA_perf_crypto_paillier_DEPENDENCIES) 
	@rm -f perf_crypto_paillier$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_crypto_paillier_OBJECTS) $(perf_crypto_paillier_LDADD) $(LIBS)

perf_crypto_rsa$(EXEEXT): $(perf_crypto_rsa_OBJECTS) $(perf_crypto_rsa_DEPENDENCIES) $(EXTRA_perf_crypto_rsa_DEPENDENCIES) 
	@rm -f perf_crypto_rsa$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_crypto_rsa_OBJECTS) $(perf_crypto_rsa_LDADD) $(LIBS)

perf_crypto_symmetric$(EXEEXT): $(perf_crypto_symmetric_OBJECTS) $(perf_crypto_symmetric_DEPENDENCIES) $(EXTRA_perf_crypto_symmetric_DEPENDENCIES) 
	@rm -f perf_crypto_symmetric$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_crypto_symmetric_OBJECTS) $(perf_crypto_symmetric_LDADD) $(LIBS)

perf_malloc$(EXEEXT): $(perf_malloc_OBJECTS) $(perf_malloc_DEPENDENCIES) $(EXTRA_perf_malloc_DEPENDENCIES) 
	@rm -f perf_malloc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_malloc_OBJECTS) $(perf_malloc_LDADD) $(LIBS)

test_bio$(EXEEXT): $(test_bio_OBJECTS) $(test_bio_DEPENDENCIES) $(EXTRA_test_bio_DEPENDENCIES) 
	@rm -f test_bio$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_bio_OBJECTS) $(test_bio_LDADD) $(LIBS)

test_client.nc$(EXEEXT): $(test_client_nc_OBJECTS) $(test_client_nc_DEPENDENCIES) $(EXTRA_test_client_nc_DEPENDENCIES) 
	@rm -f test_client.nc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_client_nc_OBJECTS) $(test_client_nc_LDADD) $(LIBS)

test_client_unix.nc$(EXEEXT): $(test_client_unix_nc_OBJECTS) $(test_client_unix_nc_DEPENDENCIES) $(EXTRA_test_client_unix_nc_DEPENDENCIES) 
	@rm -f test_client_unix.nc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_client_unix_nc_OBJECTS) $(test_client_unix_nc_LDADD) $(LIBS)

test_common_allocation$(EXEEXT): $(test_common_allocation_OBJECTS) $(test_common_allocation_DEPENDENCIES) $(EXTRA_test_common_allocation_DEPENDENCIES) 
	@rm -f test_common_allocation$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_common_allocation_OBJECTS) $(test_common_allocation_LDADD) $(LIBS)

test_common_endian$(EXEEXT): $(test_common_endian_OBJECTS) $(test_common_endian_DEPENDENCIES) $(EXTRA_test_common_endian_DEPENDENCIES) 
	@rm -f test_common_endian$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_common_endian_OBJECTS) $(test_common_endian_LDADD) $(LIBS)

test_common_logging$(EXEEXT): $(test_common_logging_OBJECTS) $(test_common_logging_DEPENDENCIES) $(EXTRA_test_common_logging_DEPENDENCIES) 
	@rm -f test_common_logging$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_common_logging_OBJECTS) $(test_common_logging_LDADD) $(LIBS)

test_common_logging_dummy$(EXEEXT): $(test_common_logging_dummy_OBJECTS) $(test_common_logging_dummy_DEPENDENCIES) $(EXTRA_test_common_logging_dummy_DEPENDENCIES) 
	@rm -f test_common_logging_dummy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_common_logging_dummy_OBJECTS) $(test_common_logging_dummy_LDADD) $(LIBS)

test_common_logging_runtime_loglevels$(EXEEXT): $(test_common_logging_runtime_loglevels_OBJECTS) $(test_common_logging_runtime_loglevels_DEPENDENCIES) $(EXTRA_test_common_logging_runtime_loglevels_DEPENDENCIES) 
	@rm -f test_common_logging_runtime_loglevels$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_common_logging_runtime_loglevels_OBJECTS) $(test_common_logging_runtime_loglevels_LDADD) $(LIBS)

test_configuration$(EXEEXT): $(test_configuration_OBJECTS) $(test_configuration_DEPENDENCIES) $(EXTRA_test_configuration_DEPENDENCIES) 
	@rm -f test_configuration$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_configuration_OBJECTS) $(test_configuration_LDADD) $(LIBS)

test_container_bloomfilter$(EXEEXT): $(test_container_bloomfilter_OBJECTS) $(test_container_bloomfilter_DEPENDENCIES) $(EXTRA_test_container_bloomfilter_DEPENDENCIES) 
	@rm -f test_container_bloomfilter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_container_bloomfilter_OBJECTS) $(test_container_bloomfilter_LDADD) $(LIBS)

test_container_dll$(EXEEXT): $(test_container_dll_OBJECTS) $(test_container_dll_DEPENDENCIES) $(EXTRA_test_container_dll_DEPENDENCIES) 
	@rm -f test_container_dll$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_container_dll_OBJECTS) $(test_container_dll_LDADD) $(LIBS)

test_container_heap$(EXEEXT): $(test_container_heap_OBJECTS) $(test_container_heap_DEPENDENCIES) $(EXTRA_test_container_heap_DEPENDENCIES) 
	@rm -f test_container_heap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_container_heap_OBJECTS) $(test_container_heap_LDADD) $(LIBS)

test_container_meta_data$(EXEEXT): $(test_container_meta_data_OBJECTS) $(test_container_meta_data_DEPENDENCIES) $(EXTRA_test_container_meta_data_DEPENDENCIES) 
	@rm -f test_container_meta_data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_container_meta_data_OBJECTS) $(test_container_meta_data_LDADD) $(LIBS)

test_container_multihashmap$(EXEEXT): $(test_container_multihashmap_OBJECTS) $(test_container_multihashmap_DEPENDENCIES) $(EXTRA_test_container_multihashmap_DEPENDENCIES) 
	@rm -f test_container_multihashmap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_container_multihashmap_OBJECTS) $(test_container_multihashmap_LDADD) $(LIBS)

test_container_multihashmap32$(EXEEXT): $(test_container_multihashmap32_OBJECTS) $(test_container_multihashmap32_DEPENDENCIES) $(EXTRA_test_container_multihashmap32_DEPENDENCIES) 
	@rm -f test_container_multihashmap32$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_container_multihashmap32_OBJECTS) $(test_container_multihashmap32_LDADD) $(LIBS)

test_container_multipeermap$(EXEEXT): $(test_container_multipeermap_OBJECTS) $(test_container_multipeermap_DEPENDENCIES) $(EXTRA_test_container_multipeermap_DEPENDENCIES) 
	@rm -f test_container_multipeermap$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_container_multipeermap_OBJECTS) $(test_container_multipeermap_LDADD) $(LIBS)

test_crypto_crc$(EXEEXT): $(test_crypto_crc_OBJECTS) $(test_crypto_crc_DEPENDENCIES) $(EXTRA_test_crypto_crc_DEPENDENCIES) 
	@rm -f test_crypto_crc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_crypto_crc_OBJECTS) $(test_crypto_crc_LDADD) $(LIBS)

test_crypto_ecc_dlog$(EXEEXT): $(test_crypto_ecc_dlog_OBJECTS) $(test_crypto_ecc_dlog_DEPENDENCIES) $(EXTRA_test_crypto_ecc_dlog_DEPENDENCIES) 
	@rm -f test_crypto_ecc_dlog$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_crypto_ecc_dlog_OBJECTS) $(test_crypto_ecc_dlog_LDADD) $(LIBS)

test_crypto_ecdh_eddsa$(EXEEXT): $(test_crypto_ecdh_eddsa_OBJECTS) $(test_crypto_ecdh_eddsa_DEPENDENCIES) $(EXTRA_test_crypto_ecdh_eddsa_DEPENDENCIES) 
	@rm -f test_crypto_ecdh_eddsa$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_crypto_ecdh_eddsa_OBJECTS) $(test_crypto_ecdh_eddsa_LDADD) $(LIBS)

test_crypto_ecdhe$(EXEEXT): $(test_crypto_ecdhe_OBJECTS) $(test_crypto_ecdhe_DEPENDENCIES) $(EXTRA_test_crypto_ecdhe_DEPENDENCIES) 
	@rm -f test_crypto_ecdhe$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_crypto_ecdhe_OBJECTS) $(test_crypto_ecdhe_LDADD) $(LIBS)

test_crypto_ecdsa$(EXEEXT): $(test_crypto_ecdsa_OBJECTS) $(test_crypto_ecdsa_DEPENDENCIES) $(EXTRA_test_crypto_ecdsa_DEPENDENCIES) 
	@rm -f test_crypto_ecdsa$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_crypto_ecdsa_OBJECTS) $(test_crypto_ecdsa_LDADD) $(LIBS)

test_crypto_eddsa$(EXEEXT): $(test_crypto_eddsa_OBJECTS) $(test_crypto_eddsa_DEPENDENCIES) $(EXTRA_test_crypto_eddsa_DEPENDENCIES) 
	@rm -f test_crypto_eddsa$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_crypto_eddsa_OBJECTS) $(test_crypto_eddsa_LDADD) $(LIBS)

test_crypto_hash$(EXEEXT): $(test_crypto_hash_OBJECTS) $(test_crypto_hash_DEPENDENCIES) $(EXTRA_test_crypto_hash_DEPENDENCIES) 
	@rm -f test_crypto_hash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_crypto_hash_OBJECTS) $(test_crypto_hash_LDADD) $(LIBS)

test_crypto_hash_context$(EXEEXT): $(test_crypto_hash_context_OBJECTS) $(test_crypto_hash_context_DEPENDENCIES) $(EXTRA_test_crypto_hash_context_DEPENDENCIES) 
	@rm -f test_crypto_hash_context$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_crypto_hash_context_OBJECTS) $(test_crypto_hash_context_LDADD) $(LIBS)

test_crypto_hkdf$(EXEEXT): $(test_crypto_hkdf_OBJECTS) $(test_crypto_hkdf_DEPENDENCIES) $(EXTRA_test_crypto_hkdf_DEPENDENCIES) 
	@rm -f test_crypto_hkdf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_crypto_hkdf_OBJECTS) $(test_crypto_hkdf_LDADD) $(LIBS)

test_crypto_kdf$(EXEEXT): $(test_crypto_kdf_OBJECTS) $(test_crypto_kdf_DEPENDENCIES) $(EXTRA_test_crypto_kdf_DEPENDENCIES) 
	@rm -f test_crypto_kdf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_crypto_kdf_OBJECTS) $(test_crypto_kdf_LDADD) $(LIBS)

test_crypto_paillier$(EXEEXT): $(test_crypto_paillier_OBJECTS) $(test_crypto_paillier_DEPENDENCIES) $(EXTRA_test_crypto_paillier_DEPENDENCIES) 
	@rm -f test_crypto_paillier$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_crypto_paillier_OBJECTS) $(test_crypto_paillier_LDADD) $(LIBS)

test_crypto_random$(EXEEXT): $(test_crypto_random_OBJECTS) $(test_crypto_random_DEPENDENCIES) $(EXTRA_test_crypto_random_DEPENDENCIES) 
	@rm -f test_crypto_random$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_crypto_random_OBJECTS) $(test_crypto_random_LDADD) $(LIBS)

test_crypto_rsa$(EXEEXT): $(test_crypto_rsa_OBJECTS) $(test_crypto_rsa_DEPENDENCIES) $(EXTRA_test_crypto_rsa_DEPENDENCIES) 
	@rm -f test_crypto_rsa$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_crypto_rsa_OBJECTS) $(test_crypto_rsa_LDADD) $(LIBS)

test_crypto_symmetric$(EXEEXT): $(test_crypto_symmetric_OBJECTS) $(test_crypto_symmetric_DEPENDENCIES) $(EXTRA_test_crypto_symmetric_DEPENDENCIES) 
	@rm -f test_crypto_symmetric$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_crypto_symmetric_OBJECTS) $(test_crypto_symmetric_LDADD) $(LIBS)

test_disk$(EXEEXT): $(test_disk_OBJECTS) $(test_disk_DEPENDENCIES) $(EXTRA_test_disk_DEPENDENCIES) 
	@rm -f test_disk$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_disk_OBJECTS) $(test_disk_LDADD) $(LIBS)

test_getopt$(EXEEXT): $(test_getopt_OBJECTS) $(test_getopt_DEPENDENCIES) $(EXTRA_test_getopt_DEPENDENCIES) 
	@rm -f test_getopt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_getopt_OBJECTS) $(test_getopt_LDADD) $(LIBS)

test_hexcoder$(EXEEXT): $(test_hexcoder_OBJECTS) $(test_hexcoder_DEPENDENCIES) $(EXTRA_test_hexcoder_DEPENDENCIES) 
	@rm -f test_hexcoder$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_hexcoder_OBJECTS) $(test_hexcoder_LDADD) $(LIBS)

test_mq$(EXEEXT): $(test_mq_OBJECTS) $(test_mq_DEPENDENCIES) $(EXTRA_test_mq_DEPENDENCIES) 
	@rm -f test_mq$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_mq_OBJECTS) $(test_mq_LDADD) $(LIBS)

test_os_network$(EXEEXT): $(test_os_network_OBJECTS) $(test_os_network_DEPENDENCIES) $(EXTRA_test_os_network_DEPENDENCIES) 
	@rm -f test_os_network$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_os_network_OBJECTS) $(test_os_network_LDADD) $(LIBS)

test_os_start_process$(EXEEXT): $(test_os_start_process_OBJECTS) $(test_os_start_process_DEPENDENCIES) $(EXTRA_test_os_start_process_DEPENDENCIES) 
	@rm -f test_os_start_process$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_os_start_process_OBJECTS) $(test_os_start_process_LDADD) $(LIBS)

test_peer$(EXEEXT): $(test_peer_OBJECTS) $(test_peer_DEPENDENCIES) $(EXTRA_test_peer_DEPENDENCIES) 
	@rm -f test_peer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_peer_OBJECTS) $(test_peer_LDADD) $(LIBS)

test_plugin$(EXEEXT): $(test_plugin_OBJECTS) $(test_plugin_DEPENDENCIES) $(EXTRA_test_plugin_DEPENDENCIES) 
	@rm -f test_plugin$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_plugin_OBJECTS) $(test_plugin_LDADD) $(LIBS)

test_program$(EXEEXT): $(test_program_OBJECTS) $(test_program_DEPENDENCIES) $(EXTRA_test_program_DEPENDENCIES) 
	@rm -f test_program$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_program_OBJECTS) $(test_program_LDADD) $(LIBS)

test_regex$(EXEEXT): $(test_regex_OBJECTS) $(test_regex_DEPENDENCIES) $(EXTRA_test_regex_DEPENDENCIES) 
	@rm -f test_regex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_regex_OBJECTS) $(test_regex_LDADD) $(LIBS)

test_resolver_api.nc$(EXEEXT): $(test_resolver_api_nc_OBJECTS) $(test_resolver_api_nc_DEPENDENCIES) $(EXTRA_test_resolver_api_nc_DEPENDENCIES) 
	@rm -f test_resolver_api.nc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_resolver_api_nc_OBJECTS) $(test_resolver_api_nc_LDADD) $(LIBS)

test_scheduler$(EXEEXT): $(test_scheduler_OBJECTS) $(test_scheduler_DEPENDENCIES) $(EXTRA_test_scheduler_DEPENDENCIES) 
	@rm -f test_scheduler$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_scheduler_OBJECTS) $(test_scheduler_LDADD) $(LIBS)

test_scheduler_delay$(EXEEXT): $(test_scheduler_delay_OBJECTS) $(test_scheduler_delay_DEPENDENCIES) $(EXTRA_test_scheduler_delay_DEPENDENCIES) 
	@rm -f test_scheduler_delay$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_scheduler_delay_OBJECTS) $(test_scheduler_delay_LDADD) $(LIBS)

test_service$(EXEEXT): $(test_service_OBJECTS) $(test_service_DEPENDENCIES) $(EXTRA_test_service_DEPENDENCIES) 
	@rm -f test_service$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_service_OBJECTS) $(test_service_LDADD) $(LIBS)

test_speedup$(EXEEXT): $(test_speedup_OBJECTS) $(test_speedup_DEPENDENCIES) $(EXTRA_test_speedup_DEPENDENCIES) 
	@rm -f test_speedup$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_speedup_OBJECTS) $(test_speedup_LDADD) $(LIBS)

test_strings$(EXEEXT): $(test_strings_OBJECTS) $(test_strings_DEPENDENCIES) $(EXTRA_test_strings_DEPENDENCIES) 
	@rm -f test_strings$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_strings_OBJECTS) $(test_strings_LDADD) $(LIBS)

test_strings_to_data$(EXEEXT): $(test_strings_to_data_OBJECTS) $(test_strings_to_data_DEPENDENCIES) $(EXTRA_test_strings_to_data_DEPENDENCIES) 
	@rm -f test_strings_to_data$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_strings_to_data_OBJECTS) $(test_strings_to_data_LDADD) $(LIBS)

test_time$(EXEEXT): $(test_time_OBJECTS) $(test_time_DEPENDENCIES) $(EXTRA_test_time_DEPENDENCIES) 
	@rm -f test_time$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_time_OBJECTS) $(test_time_LDADD) $(LIBS)

test_tun$(EXEEXT): $(test_tun_OBJECTS) $(test_tun_DEPENDENCIES) $(EXTRA_test_tun_DEPENDENCIES) 
	@rm -f test_tun$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_tun_OBJECTS) $(test_tun_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bandwidth.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/benchmark.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bio.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/client.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/common_allocation.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/common_endian.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/common_logging.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configuration.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configuration_loader.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/container_bloomfilter.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/container_heap.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/container_meta_data.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/container_multihashmap.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/container_multihashmap32.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/container_multipeermap.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/container_multishortmap.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/container_multiuuidmap.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crypto_crc.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crypto_ecc.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crypto_ecc_dlog.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crypto_ecc_setup.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crypto_hash.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crypto_hash_file.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crypto_hkdf.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crypto_kdf.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crypto_mpi.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crypto_paillier.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crypto_pow.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crypto_random.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crypto_rsa.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crypto_symmetric.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/disk.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsparser.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dnsstub.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getopt.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getopt_helpers.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnunet-config-diff.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnunet-config.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnunet-ecc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnunet-qr.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnunet-resolver.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnunet-scrypt.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnunet-service-resolver.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnunet-timeout.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gnunet-uri.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/helper.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mq.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mst.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nc.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/network.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/op.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/os_installation.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/os_network.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/os_priority.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/peer.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/perf_crypto_asymmetric.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/perf_crypto_ecc_dlog.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/perf_crypto_hash.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/perf_crypto_paillier.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/perf_crypto_rsa.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/perf_crypto_symmetric.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/perf_malloc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/plugin.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/proc_compat.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/program.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/regex.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/resolver_api.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scheduler.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/service.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/signal.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/speedup.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/strings.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_bio.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_client.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_common_allocation.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_common_endian.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_common_logging.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_common_logging_dummy.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_common_logging_runtime_loglevels.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_configuration.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_container_bloomfilter.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_container_dll.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_container_heap.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_container_meta_data.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_container_multihashmap.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_container_multihashmap32.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_container_multipeermap.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_crypto_crc.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_crypto_ecc_dlog.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_crypto_ecdh_eddsa.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_crypto_ecdhe.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_crypto_ecdsa.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_crypto_eddsa.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_crypto_hash.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_crypto_hash_context.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_crypto_hkdf.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_crypto_kdf.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_crypto_paillier.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_crypto_random.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_crypto_rsa.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_crypto_symmetric.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_disk.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_getopt.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_hexcoder.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_mq.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_os_network.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_os_start_process.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_peer.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_plugin.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_plugin_plug.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_program.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_regex.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_resolver_api.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_scheduler.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_scheduler_delay.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_service.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_speedup.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_strings.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_strings_to_data.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_time.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_tun.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/time.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tun.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tweetnacl-gnunet.Plo@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-dist_pkgcfgDATA: $(dist_pkgcfg_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_pkgcfg_DATA)'; test -n "$(pkgcfgdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgcfgdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgcfgdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgcfgdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgcfgdir)" || exit $$?; \
	done

uninstall-dist_pkgcfgDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_pkgcfg_DATA)'; test -n "$(pkgcfgdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgcfgdir)'; $(am__uninstall_files_from_dir)
install-pkgcfgDATA: $(pkgcfg_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgcfg_DATA)'; test -n "$(pkgcfgdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgcfgdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgcfgdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgcfgdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgcfgdir)" || exit $$?; \
	done

uninstall-pkgcfgDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgcfg_DATA)'; test -n "$(pkgcfgdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgcfgdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test_bio.log: test_bio$(EXEEXT)
	@p='test_bio$(EXEEXT)'; \
	b='test_bio'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_common_allocation.log: test_common_allocation$(EXEEXT)
	@p='test_common_allocation$(EXEEXT)'; \
	b='test_common_allocation'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_common_endian.log: test_common_endian$(EXEEXT)
	@p='test_common_endian$(EXEEXT)'; \
	b='test_common_endian'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_common_logging.log: test_common_logging$(EXEEXT)
	@p='test_common_logging$(EXEEXT)'; \
	b='test_common_logging'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_configuration.log: test_configuration$(EXEEXT)
	@p='test_configuration$(EXEEXT)'; \
	b='test_configuration'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_container_bloomfilter.log: test_container_bloomfilter$(EXEEXT)
	@p='test_container_bloomfilter$(EXEEXT)'; \
	b='test_container_bloomfilter'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_container_dll.log: test_container_dll$(EXEEXT)
	@p='test_container_dll$(EXEEXT)'; \
	b='test_container_dll'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_container_meta_data.log: test_container_meta_data$(EXEEXT)
	@p='test_container_meta_data$(EXEEXT)'; \
	b='test_container_meta_data'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_container_multihashmap.log: test_container_multihashmap$(EXEEXT)
	@p='test_container_multihashmap$(EXEEXT)'; \
	b='test_container_multihashmap'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_container_multihashmap32.log: test_container_multihashmap32$(EXEEXT)
	@p='test_container_multihashmap32$(EXEEXT)'; \
	b='test_container_multihashmap32'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_container_multipeermap.log: test_container_multipeermap$(EXEEXT)
	@p='test_container_multipeermap$(EXEEXT)'; \
	b='test_container_multipeermap'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_container_heap.log: test_container_heap$(EXEEXT)
	@p='test_container_heap$(EXEEXT)'; \
	b='test_container_heap'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_crypto_symmetric.log: test_crypto_symmetric$(EXEEXT)
	@p='test_crypto_symmetric$(EXEEXT)'; \
	b='test_crypto_symmetric'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_crypto_crc.log: test_crypto_crc$(EXEEXT)
	@p='test_crypto_crc$(EXEEXT)'; \
	b='test_crypto_crc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_crypto_ecdsa.log: test_crypto_ecdsa$(EXEEXT)
	@p='test_crypto_ecdsa$(EXEEXT)'; \
	b='test_crypto_ecdsa'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_crypto_eddsa.log: test_crypto_eddsa$(EXEEXT)
	@p='test_crypto_eddsa$(EXEEXT)'; \
	b='test_crypto_eddsa'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_crypto_ecdhe.log: test_crypto_ecdhe$(EXEEXT)
	@p='test_crypto_ecdhe$(EXEEXT)'; \
	b='test_crypto_ecdhe'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_crypto_ecdh_eddsa.log: test_crypto_ecdh_eddsa$(EXEEXT)
	@p='test_crypto_ecdh_eddsa$(EXEEXT)'; \
	b='test_crypto_ecdh_eddsa'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_crypto_ecc_dlog.log: test_crypto_ecc_dlog$(EXEEXT)
	@p='test_crypto_ecc_dlog$(EXEEXT)'; \
	b='test_crypto_ecc_dlog'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_crypto_hash.log: test_crypto_hash$(EXEEXT)
	@p='test_crypto_hash$(EXEEXT)'; \
	b='test_crypto_hash'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_crypto_hash_context.log: test_crypto_hash_context$(EXEEXT)
	@p='test_crypto_hash_context$(EXEEXT)'; \
	b='test_crypto_hash_context'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_crypto_hkdf.log: test_crypto_hkdf$(EXEEXT)
	@p='test_crypto_hkdf$(EXEEXT)'; \
	b='test_crypto_hkdf'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_crypto_kdf.log: test_crypto_kdf$(EXEEXT)
	@p='test_crypto_kdf$(EXEEXT)'; \
	b='test_crypto_kdf'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_crypto_paillier.log: test_crypto_paillier$(EXEEXT)
	@p='test_crypto_paillier$(EXEEXT)'; \
	b='test_crypto_paillier'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_crypto_random.log: test_crypto_random$(EXEEXT)
	@p='test_crypto_random$(EXEEXT)'; \
	b='test_crypto_random'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_crypto_rsa.log: test_crypto_rsa$(EXEEXT)
	@p='test_crypto_rsa$(EXEEXT)'; \
	b='test_crypto_rsa'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_disk.log: test_disk$(EXEEXT)
	@p='test_disk$(EXEEXT)'; \
	b='test_disk'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_getopt.log: test_getopt$(EXEEXT)
	@p='test_getopt$(EXEEXT)'; \
	b='test_getopt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_hexcoder.log: test_hexcoder$(EXEEXT)
	@p='test_hexcoder$(EXEEXT)'; \
	b='test_hexcoder'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_mq.log: test_mq$(EXEEXT)
	@p='test_mq$(EXEEXT)'; \
	b='test_mq'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_os_network.log: test_os_network$(EXEEXT)
	@p='test_os_network$(EXEEXT)'; \
	b='test_os_network'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_peer.log: test_peer$(EXEEXT)
	@p='test_peer$(EXEEXT)'; \
	b='test_peer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_plugin.log: test_plugin$(EXEEXT)
	@p='test_plugin$(EXEEXT)'; \
	b='test_plugin'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_program.log: test_program$(EXEEXT)
	@p='test_program$(EXEEXT)'; \
	b='test_program'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_regex.log: test_regex$(EXEEXT)
	@p='test_regex$(EXEEXT)'; \
	b='test_regex'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_scheduler.log: test_scheduler$(EXEEXT)
	@p='test_scheduler$(EXEEXT)'; \
	b='test_scheduler'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_scheduler_delay.log: test_scheduler_delay$(EXEEXT)
	@p='test_scheduler_delay$(EXEEXT)'; \
	b='test_scheduler_delay'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_service.log: test_service$(EXEEXT)
	@p='test_service$(EXEEXT)'; \
	b='test_service'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_strings.log: test_strings$(EXEEXT)
	@p='test_strings$(EXEEXT)'; \
	b='test_strings'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_strings_to_data.log: test_strings_to_data$(EXEEXT)
	@p='test_strings_to_data$(EXEEXT)'; \
	b='test_strings_to_data'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_speedup.log: test_speedup$(EXEEXT)
	@p='test_speedup$(EXEEXT)'; \
	b='test_speedup'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_time.log: test_time$(EXEEXT)
	@p='test_time$(EXEEXT)'; \
	b='test_time'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_tun.log: test_tun$(EXEEXT)
	@p='test_tun$(EXEEXT)'; \
	b='test_tun'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
perf_crypto_hash.log: perf_crypto_hash$(EXEEXT)
	@p='perf_crypto_hash$(EXEEXT)'; \
	b='perf_crypto_hash'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
perf_crypto_ecc_dlog.log: perf_crypto_ecc_dlog$(EXEEXT)
	@p='perf_crypto_ecc_dlog$(EXEEXT)'; \
	b='perf_crypto_ecc_dlog'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
perf_crypto_rsa.log: perf_crypto_rsa$(EXEEXT)
	@p='perf_crypto_rsa$(EXEEXT)'; \
	b='perf_crypto_rsa'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
perf_crypto_paillier.log: perf_crypto_paillier$(EXEEXT)
	@p='perf_crypto_paillier$(EXEEXT)'; \
	b='perf_crypto_paillier'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
perf_crypto_symmetric.log: perf_crypto_symmetric$(EXEEXT)
	@p='perf_crypto_symmetric$(EXEEXT)'; \
	b='perf_crypto_symmetric'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
perf_crypto_asymmetric.log: perf_crypto_asymmetric$(EXEEXT)
	@p='perf_crypto_asymmetric$(EXEEXT)'; \
	b='perf_crypto_asymmetric'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
perf_malloc.log: perf_malloc$(EXEEXT)
	@p='perf_malloc$(EXEEXT)'; \
	b='perf_malloc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_os_start_process.log: test_os_start_process$(EXEEXT)
	@p='test_os_start_process$(EXEEXT)'; \
	b='test_os_start_process'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_common_logging_runtime_loglevels.log: test_common_logging_runtime_loglevels$(EXEEXT)
	@p='test_common_logging_runtime_loglevels$(EXEEXT)'; \
	b='test_common_logging_runtime_loglevels'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.nc.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(NC_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_NC_LOG_DRIVER_FLAGS) $(NC_LOG_DRIVER_FLAGS) -- $(NC_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.nc$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(NC_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_NC_LOG_DRIVER_FLAGS) $(NC_LOG_DRIVER_FLAGS) -- $(NC_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(LTLIBRARIES) $(DATA)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libexecdir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(plugindir)" "$(DESTDIR)$(pkgcfgdir)" "$(DESTDIR)$(pkgcfgdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libexecPROGRAMS clean-libtool \
	clean-noinstPROGRAMS clean-pluginLTLIBRARIES mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/bandwidth.Plo
	-rm -f ./$(DEPDIR)/benchmark.Plo
	-rm -f ./$(DEPDIR)/bio.Plo
	-rm -f ./$(DEPDIR)/client.Plo
	-rm -f ./$(DEPDIR)/common_allocation.Plo
	-rm -f ./$(DEPDIR)/common_endian.Plo
	-rm -f ./$(DEPDIR)/common_logging.Plo
	-rm -f ./$(DEPDIR)/configuration.Plo
	-rm -f ./$(DEPDIR)/configuration_loader.Plo
	-rm -f ./$(DEPDIR)/container_bloomfilter.Plo
	-rm -f ./$(DEPDIR)/container_heap.Plo
	-rm -f ./$(DEPDIR)/container_meta_data.Plo
	-rm -f ./$(DEPDIR)/container_multihashmap.Plo
	-rm -f ./$(DEPDIR)/container_multihashmap32.Plo
	-rm -f ./$(DEPDIR)/container_multipeermap.Plo
	-rm -f ./$(DEPDIR)/container_multishortmap.Plo
	-rm -f ./$(DEPDIR)/container_multiuuidmap.Plo
	-rm -f ./$(DEPDIR)/crypto_crc.Plo
	-rm -f ./$(DEPDIR)/crypto_ecc.Plo
	-rm -f ./$(DEPDIR)/crypto_ecc_dlog.Plo
	-rm -f ./$(DEPDIR)/crypto_ecc_setup.Plo
	-rm -f ./$(DEPDIR)/crypto_hash.Plo
	-rm -f ./$(DEPDIR)/crypto_hash_file.Plo
	-rm -f ./$(DEPDIR)/crypto_hkdf.Plo
	-rm -f ./$(DEPDIR)/crypto_kdf.Plo
	-rm -f ./$(DEPDIR)/crypto_mpi.Plo
	-rm -f ./$(DEPDIR)/crypto_paillier.Plo
	-rm -f ./$(DEPDIR)/crypto_pow.Plo
	-rm -f ./$(DEPDIR)/crypto_random.Plo
	-rm -f ./$(DEPDIR)/crypto_rsa.Plo
	-rm -f ./$(DEPDIR)/crypto_symmetric.Plo
	-rm -f ./$(DEPDIR)/disk.Plo
	-rm -f ./$(DEPDIR)/dnsparser.Plo
	-rm -f ./$(DEPDIR)/dnsstub.Plo
	-rm -f ./$(DEPDIR)/getopt.Plo
	-rm -f ./$(DEPDIR)/getopt_helpers.Plo
	-rm -f ./$(DEPDIR)/gnunet-config-diff.Po
	-rm -f ./$(DEPDIR)/gnunet-config.Po
	-rm -f ./$(DEPDIR)/gnunet-ecc.Po
	-rm -f ./$(DEPDIR)/gnunet-qr.Po
	-rm -f ./$(DEPDIR)/gnunet-resolver.Po
	-rm -f ./$(DEPDIR)/gnunet-scrypt.Po
	-rm -f ./$(DEPDIR)/gnunet-service-resolver.Po
	-rm -f ./$(DEPDIR)/gnunet-timeout.Po
	-rm -f ./$(DEPDIR)/gnunet-uri.Po
	-rm -f ./$(DEPDIR)/helper.Plo
	-rm -f ./$(DEPDIR)/load.Plo
	-rm -f ./$(DEPDIR)/mq.Plo
	-rm -f ./$(DEPDIR)/mst.Plo
	-rm -f ./$(DEPDIR)/nc.Plo
	-rm -f ./$(DEPDIR)/network.Plo
	-rm -f ./$(DEPDIR)/op.Plo
	-rm -f ./$(DEPDIR)/os_installation.Plo
	-rm -f ./$(DEPDIR)/os_network.Plo
	-rm -f ./$(DEPDIR)/os_priority.Plo
	-rm -f ./$(DEPDIR)/peer.Plo
	-rm -f ./$(DEPDIR)/perf_crypto_asymmetric.Po
	-rm -f ./$(DEPDIR)/perf_crypto_ecc_dlog.Po
	-rm -f ./$(DEPDIR)/perf_crypto_hash.Po
	-rm -f ./$(DEPDIR)/perf_crypto_paillier.Po
	-rm -f ./$(DEPDIR)/perf_crypto_rsa.Po
	-rm -f ./$(DEPDIR)/perf_crypto_symmetric.Po
	-rm -f ./$(DEPDIR)/perf_malloc.Po
	-rm -f ./$(DEPDIR)/plugin.Plo
	-rm -f ./$(DEPDIR)/proc_compat.Plo
	-rm -f ./$(DEPDIR)/program.Plo
	-rm -f ./$(DEPDIR)/regex.Plo
	-rm -f ./$(DEPDIR)/resolver_api.Plo
	-rm -f ./$(DEPDIR)/scheduler.Plo
	-rm -f ./$(DEPDIR)/service.Plo
	-rm -f ./$(DEPDIR)/signal.Plo
	-rm -f ./$(DEPDIR)/speedup.Plo
	-rm -f ./$(DEPDIR)/strings.Plo
	-rm -f ./$(DEPDIR)/test_bio.Po
	-rm -f ./$(DEPDIR)/test_client.Po
	-rm -f ./$(DEPDIR)/test_common_allocation.Po
	-rm -f ./$(DEPDIR)/test_common_endian.Po
	-rm -f ./$(DEPDIR)/test_common_logging.Po
	-rm -f ./$(DEPDIR)/test_common_logging_dummy.Po
	-rm -f ./$(DEPDIR)/test_common_logging_runtime_loglevels.Po
	-rm -f ./$(DEPDIR)/test_configuration.Po
	-rm -f ./$(DEPDIR)/test_container_bloomfilter.Po
	-rm -f ./$(DEPDIR)/test_container_dll.Po
	-rm -f ./$(DEPDIR)/test_container_heap.Po
	-rm -f ./$(DEPDIR)/test_container_meta_data.Po
	-rm -f ./$(DEPDIR)/test_container_multihashmap.Po
	-rm -f ./$(DEPDIR)/test_container_multihashmap32.Po
	-rm -f ./$(DEPDIR)/test_container_multipeermap.Po
	-rm -f ./$(DEPDIR)/test_crypto_crc.Po
	-rm -f ./$(DEPDIR)/test_crypto_ecc_dlog.Po
	-rm -f ./$(DEPDIR)/test_crypto_ecdh_eddsa.Po
	-rm -f ./$(DEPDIR)/test_crypto_ecdhe.Po
	-rm -f ./$(DEPDIR)/test_crypto_ecdsa.Po
	-rm -f ./$(DEPDIR)/test_crypto_eddsa.Po
	-rm -f ./$(DEPDIR)/test_crypto_hash.Po
	-rm -f ./$(DEPDIR)/test_crypto_hash_context.Po
	-rm -f ./$(DEPDIR)/test_crypto_hkdf.Po
	-rm -f ./$(DEPDIR)/test_crypto_kdf.Po
	-rm -f ./$(DEPDIR)/test_crypto_paillier.Po
	-rm -f ./$(DEPDIR)/test_crypto_random.Po
	-rm -f ./$(DEPDIR)/test_crypto_rsa.Po
	-rm -f ./$(DEPDIR)/test_crypto_symmetric.Po
	-rm -f ./$(DEPDIR)/test_disk.Po
	-rm -f ./$(DEPDIR)/test_getopt.Po
	-rm -f ./$(DEPDIR)/test_hexcoder.Po
	-rm -f ./$(DEPDIR)/test_mq.Po
	-rm -f ./$(DEPDIR)/test_os_network.Po
	-rm -f ./$(DEPDIR)/test_os_start_process.Po
	-rm -f ./$(DEPDIR)/test_peer.Po
	-rm -f ./$(DEPDIR)/test_plugin.Po
	-rm -f ./$(DEPDIR)/test_plugin_plug.Plo
	-rm -f ./$(DEPDIR)/test_program.Po
	-rm -f ./$(DEPDIR)/test_regex.Po
	-rm -f ./$(DEPDIR)/test_resolver_api.Po
	-rm -f ./$(DEPDIR)/test_scheduler.Po
	-rm -f ./$(DEPDIR)/test_scheduler_delay.Po
	-rm -f ./$(DEPDIR)/test_service.Po
	-rm -f ./$(DEPDIR)/test_speedup.Po
	-rm -f ./$(DEPDIR)/test_strings.Po
	-rm -f ./$(DEPDIR)/test_strings_to_data.Po
	-rm -f ./$(DEPDIR)/test_time.Po
	-rm -f ./$(DEPDIR)/test_tun.Po
	-rm -f ./$(DEPDIR)/time.Plo
	-rm -f ./$(DEPDIR)/tun.Plo
	-rm -f ./$(DEPDIR)/tweetnacl-gnunet.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dist_pkgcfgDATA install-pkgcfgDATA \
	install-pluginLTLIBRARIES

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES \
	install-libexecPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/bandwidth.Plo
	-rm -f ./$(DEPDIR)/benchmark.Plo
	-rm -f ./$(DEPDIR)/bio.Plo
	-rm -f ./$(DEPDIR)/client.Plo
	-rm -f ./$(DEPDIR)/common_allocation.Plo
	-rm -f ./$(DEPDIR)/common_endian.Plo
	-rm -f ./$(DEPDIR)/common_logging.Plo
	-rm -f ./$(DEPDIR)/configuration.Plo
	-rm -f ./$(DEPDIR)/configuration_loader.Plo
	-rm -f ./$(DEPDIR)/container_bloomfilter.Plo
	-rm -f ./$(DEPDIR)/container_heap.Plo
	-rm -f ./$(DEPDIR)/container_meta_data.Plo
	-rm -f ./$(DEPDIR)/container_multihashmap.Plo
	-rm -f ./$(DEPDIR)/container_multihashmap32.Plo
	-rm -f ./$(DEPDIR)/container_multipeermap.Plo
	-rm -f ./$(DEPDIR)/container_multishortmap.Plo
	-rm -f ./$(DEPDIR)/container_multiuuidmap.Plo
	-rm -f ./$(DEPDIR)/crypto_crc.Plo
	-rm -f ./$(DEPDIR)/crypto_ecc.Plo
	-rm -f ./$(DEPDIR)/crypto_ecc_dlog.Plo
	-rm -f ./$(DEPDIR)/crypto_ecc_setup.Plo
	-rm -f ./$(DEPDIR)/crypto_hash.Plo
	-rm -f ./$(DEPDIR)/crypto_hash_file.Plo
	-rm -f ./$(DEPDIR)/crypto_hkdf.Plo
	-rm -f ./$(DEPDIR)/crypto_kdf.Plo
	-rm -f ./$(DEPDIR)/crypto_mpi.Plo
	-rm -f ./$(DEPDIR)/crypto_paillier.Plo
	-rm -f ./$(DEPDIR)/crypto_pow.Plo
	-rm -f ./$(DEPDIR)/crypto_random.Plo
	-rm -f ./$(DEPDIR)/crypto_rsa.Plo
	-rm -f ./$(DEPDIR)/crypto_symmetric.Plo
	-rm -f ./$(DEPDIR)/disk.Plo
	-rm -f ./$(DEPDIR)/dnsparser.Plo
	-rm -f ./$(DEPDIR)/dnsstub.Plo
	-rm -f ./$(DEPDIR)/getopt.Plo
	-rm -f ./$(DEPDIR)/getopt_helpers.Plo
	-rm -f ./$(DEPDIR)/gnunet-config-diff.Po
	-rm -f ./$(DEPDIR)/gnunet-config.Po
	-rm -f ./$(DEPDIR)/gnunet-ecc.Po
	-rm -f ./$(DEPDIR)/gnunet-qr.Po
	-rm -f ./$(DEPDIR)/gnunet-resolver.Po
	-rm -f ./$(DEPDIR)/gnunet-scrypt.Po
	-rm -f ./$(DEPDIR)/gnunet-service-resolver.Po
	-rm -f ./$(DEPDIR)/gnunet-timeout.Po
	-rm -f ./$(DEPDIR)/gnunet-uri.Po
	-rm -f ./$(DEPDIR)/helper.Plo
	-rm -f ./$(DEPDIR)/load.Plo
	-rm -f ./$(DEPDIR)/mq.Plo
	-rm -f ./$(DEPDIR)/mst.Plo
	-rm -f ./$(DEPDIR)/nc.Plo
	-rm -f ./$(DEPDIR)/network.Plo
	-rm -f ./$(DEPDIR)/op.Plo
	-rm -f ./$(DEPDIR)/os_installation.Plo
	-rm -f ./$(DEPDIR)/os_network.Plo
	-rm -f ./$(DEPDIR)/os_priority.Plo
	-rm -f ./$(DEPDIR)/peer.Plo
	-rm -f ./$(DEPDIR)/perf_crypto_asymmetric.Po
	-rm -f ./$(DEPDIR)/perf_crypto_ecc_dlog.Po
	-rm -f ./$(DEPDIR)/perf_crypto_hash.Po
	-rm -f ./$(DEPDIR)/perf_crypto_paillier.Po
	-rm -f ./$(DEPDIR)/perf_crypto_rsa.Po
	-rm -f ./$(DEPDIR)/perf_crypto_symmetric.Po
	-rm -f ./$(DEPDIR)/perf_malloc.Po
	-rm -f ./$(DEPDIR)/plugin.Plo
	-rm -f ./$(DEPDIR)/proc_compat.Plo
	-rm -f ./$(DEPDIR)/program.Plo
	-rm -f ./$(DEPDIR)/regex.Plo
	-rm -f ./$(DEPDIR)/resolver_api.Plo
	-rm -f ./$(DEPDIR)/scheduler.Plo
	-rm -f ./$(DEPDIR)/service.Plo
	-rm -f ./$(DEPDIR)/signal.Plo
	-rm -f ./$(DEPDIR)/speedup.Plo
	-rm -f ./$(DEPDIR)/strings.Plo
	-rm -f ./$(DEPDIR)/test_bio.Po
	-rm -f ./$(DEPDIR)/test_client.Po
	-rm -f ./$(DEPDIR)/test_common_allocation.Po
	-rm -f ./$(DEPDIR)/test_common_endian.Po
	-rm -f ./$(DEPDIR)/test_common_logging.Po
	-rm -f ./$(DEPDIR)/test_common_logging_dummy.Po
	-rm -f ./$(DEPDIR)/test_common_logging_runtime_loglevels.Po
	-rm -f ./$(DEPDIR)/test_configuration.Po
	-rm -f ./$(DEPDIR)/test_container_bloomfilter.Po
	-rm -f ./$(DEPDIR)/test_container_dll.Po
	-rm -f ./$(DEPDIR)/test_container_heap.Po
	-rm -f ./$(DEPDIR)/test_container_meta_data.Po
	-rm -f ./$(DEPDIR)/test_container_multihashmap.Po
	-rm -f ./$(DEPDIR)/test_container_multihashmap32.Po
	-rm -f ./$(DEPDIR)/test_container_multipeermap.Po
	-rm -f ./$(DEPDIR)/test_crypto_crc.Po
	-rm -f ./$(DEPDIR)/test_crypto_ecc_dlog.Po
	-rm -f ./$(DEPDIR)/test_crypto_ecdh_eddsa.Po
	-rm -f ./$(DEPDIR)/test_crypto_ecdhe.Po
	-rm -f ./$(DEPDIR)/test_crypto_ecdsa.Po
	-rm -f ./$(DEPDIR)/test_crypto_eddsa.Po
	-rm -f ./$(DEPDIR)/test_crypto_hash.Po
	-rm -f ./$(DEPDIR)/test_crypto_hash_context.Po
	-rm -f ./$(DEPDIR)/test_crypto_hkdf.Po
	-rm -f ./$(DEPDIR)/test_crypto_kdf.Po
	-rm -f ./$(DEPDIR)/test_crypto_paillier.Po
	-rm -f ./$(DEPDIR)/test_crypto_random.Po
	-rm -f ./$(DEPDIR)/test_crypto_rsa.Po
	-rm -f ./$(DEPDIR)/test_crypto_symmetric.Po
	-rm -f ./$(DEPDIR)/test_disk.Po
	-rm -f ./$(DEPDIR)/test_getopt.Po
	-rm -f ./$(DEPDIR)/test_hexcoder.Po
	-rm -f ./$(DEPDIR)/test_mq.Po
	-rm -f ./$(DEPDIR)/test_os_network.Po
	-rm -f ./$(DEPDIR)/test_os_start_process.Po
	-rm -f ./$(DEPDIR)/test_peer.Po
	-rm -f ./$(DEPDIR)/test_plugin.Po
	-rm -f ./$(DEPDIR)/test_plugin_plug.Plo
	-rm -f ./$(DEPDIR)/test_program.Po
	-rm -f ./$(DEPDIR)/test_regex.Po
	-rm -f ./$(DEPDIR)/test_resolver_api.Po
	-rm -f ./$(DEPDIR)/test_scheduler.Po
	-rm -f ./$(DEPDIR)/test_scheduler_delay.Po
	-rm -f ./$(DEPDIR)/test_service.Po
	-rm -f ./$(DEPDIR)/test_speedup.Po
	-rm -f ./$(DEPDIR)/test_strings.Po
	-rm -f ./$(DEPDIR)/test_strings_to_data.Po
	-rm -f ./$(DEPDIR)/test_time.Po
	-rm -f ./$(DEPDIR)/test_tun.Po
	-rm -f ./$(DEPDIR)/time.Plo
	-rm -f ./$(DEPDIR)/tun.Plo
	-rm -f ./$(DEPDIR)/tweetnacl-gnunet.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_pkgcfgDATA \
	uninstall-libLTLIBRARIES uninstall-libexecPROGRAMS \
	uninstall-pkgcfgDATA uninstall-pluginLTLIBRARIES

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \
	check-am clean clean-binPROGRAMS clean-checkPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libexecPROGRAMS \
	clean-libtool clean-noinstPROGRAMS clean-pluginLTLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-dist_pkgcfgDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-libexecPROGRAMS install-man install-pdf install-pdf-am \
	install-pkgcfgDATA install-pluginLTLIBRARIES install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-dist_pkgcfgDATA uninstall-libLTLIBRARIES \
	uninstall-libexecPROGRAMS uninstall-pkgcfgDATA \
	uninstall-pluginLTLIBRARIES

.PRECIOUS: Makefile


@DARWIN_TRUE@@HAVE_LIBATOMIC_TRUE@	LIBATOMIC=
test_test_client_unix.log: test_client.log

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
